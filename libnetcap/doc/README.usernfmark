This file documents userland access to access netfilter
marks (see man iptables). There are three basic access methods:

2) Receiving the nfmark via a TCP getsockopt call.

3) Sending syn-ack with an arbitrary nfmark using setsockopt.

EXAMPLE USER CODE

2) Receiving the nfmark via a TCP getsockopt call:
  
        unsigned long nfmark;
	int len;
        if ((newFd = accept (sFd, (struct sockaddr *) &clientAddr,
            &sockAddrSize)) == ERROR) {
            perror ("accept");
            close (sFd);
            return (ERROR);
        }
	len = sizeof(nfmark);
	if (getsockopt(newFd, SOL_IP, IP_FIRSTNFMARK,
	                    &nfmark, &len) < 0) {
	    perror("getsockopt: SO_IP: IP_FIRSTNFMARK");
	    exit(1);
	}
	printf("\nnfmark------->%08x\n", nfmark);


3) Sending syn-ack with an arbitrary nfmark using setsockopt:

struct ip_sendnfmark_opt {
	unsigned int		on;
	unsigned int		mark;
} opt;
  
    int const           one = 1, zero = 0;
    int len;

    len = sizeof(opt);
    if (getsockopt(sFd, SOL_IP, IP_SENDNFMARK,
	                    &opt, &len) < 0) {
        perror("setsockopt: SO_IP: IP_SENDNFMARK");
        exit(1);
    }
    printf("before: len=%d on=%d mark=%08x\n", len, opt.on, opt.mark);

    /*
     * Enable sending data 0x20 nfmark
     */

    opt.on = 1;
    opt.mark = 0x20;

    if (setsockopt(sFd, SOL_IP, IP_SENDNFMARK,
	                   &opt, sizeof(opt)) < 0) {
        perror("sendpacket: IP_SENDNFMARK");
        exit(1);
    }

    len = sizeof(opt);
    if (getsockopt(sFd, SOL_IP, IP_SENDNFMARK,
	                    &opt, &len) < 0) {
        perror("setsockopt: SO_IP: IP_SENDNFMARK");
        exit(1);
    }
    printf("after: len=%d on=%d mark=%08x\n", len, opt.on, opt.mark);
  
    /* connect to server */

    if (connect (sFd, (struct sockaddr *) &serverAddr, sockAddrSize) == ERROR) {
        perror ("connect");
        close (sFd);
        return (ERROR);
    }
