<?xml version="1.0"?>

<!--
Copyright (c) 2004, 2005 Metavize Inc.
All rights reserved.

This software is the confidential and proprietary information of
Metavize Inc. ("Confidential Information").  You shall
not disclose such Confidential Information.

$Id: build.xml,v 1.22 2005/03/25 04:00:30 jdi Exp $
-->

<project name="gui" basedir="." default="all">

  <import file="../buildtools/buildmagic.xml"/>

  <!-- main targets -->
  <target name="pkg.gensrc"  depends="gensrc.servlets"/>
  <target name="pkg.compile" depends="compile.gui"/>
  <target name="pkg.jar"     depends="jar.gui, jar.servlets"/>
  <target name="pkg.install" depends="install.hier, install.gui, install.servlets, install.webstart"/>
  <target name="pkg.clean"   depends="clean.nuke"/>


  <property name="build.gui" value="${build.root}/gui"/>

  <target name="gensrc.servlets">
    <!-- Do the jsp's so we don't need a JDK at runtime -->
    <echo message="uriroot is ${src.hier}/${suffix.mvvm.webstart}"/>
    <!-- We need an explicit list of files since the JspC task only finds *.jsp -->
    <!-- We need fork to avoid class duplication bug in ant -->
    <java classname="org.apache.jasper.JspC"
          fork="true"
          failonerror="true">
      <arg line="-d ${build.gensrc}"/>
      <arg line="-p com.metavize.jsp"/>
      <arg line="-webinc ${build.gensrc}/web-fragment.xml"/>
      <arg line="-uriroot ${src.hier}/${suffix.mvvm.webstart}/"/>
      <arg value="index.jsp"/>
      <arg value="gui.jnlp"/>
      <classpath refid="mvvm.thirdparty.classpath"/>
      <classpath refid="tomcat.classpath"/>
    </java>
    <echo message="Adding JSP servlet mappings to web.xml"/>
    <loadfile property="generated-web.xml" srcFile="${build.gensrc}/web-fragment.xml"/>
    <copy file="${src.hier}/${suffix.mvvm.webstart}/WEB-INF/web.xml" toFile="${dist.mvvm.webstart}/WEB-INF/web.xml" overwrite="true">
      <filterset>
        <filter token="JSP_PRE_COMPILED_SERVLETS" value="${generated-web.xml}"/>
      </filterset>
    </copy>
  </target>

  <target name="compile.gui">
    <mkdir dir="${build.gui}"/>

    <exec executable="/bin/sh" failonerror="true">
      <arg value="-c"/>
      <arg value="/bin/sed s/\&quot;[0-9]\.[0-9]\.*\&quot;/\&quot;`cat ../../PUBVERSION`\&quot;/g -i ./main/com/metavize/gui/util/Util.java"/>
    </exec>

    <exec executable="${buildtool.base}/dependset.sh">
      <arg value="${build.gui}"/>
      <arg value="${build.depcache}/gui.patternset"/>
    </exec>

    <depend srcdir="${src.main}" destdir="${build.gui}"
            cache="${build.depcache}/gui" closure="yes">
      <patternset includesfile="${build.depcache}/gui.patternset"/>
    </depend>

    <javac destdir="${build.gui}"
           debug="on"
           optimize="false"
           deprecation="on"
           source="1.5"
	   target="1.5"
           includeAntRuntime="false">

      <classpath refid="mvvm-client.classpath"/>

      <classpath refid="jfreechart.classpath"/>
      <classpath refid="netbeans.classpath"/>
      <classpath refid="kunststoff.classpath"/>
      <classpath refid="jnlp.classpath"/>
      <classpath refid="tomcat.classpath"/>

      <src path="${build.gensrc}"/>
      <src path="${src.main}"/>
    </javac>

  </target>

  <target name="jar.gui" depends="compile.gui">
    <jar destfile="${build.jar}/gui.jar" index="yes">
      <fileset dir="${build.gui}">
        <exclude name="com/metavize/jsp/**"/>
      </fileset>
      <fileset dir="${src.main}">
        <include name="**/*png"/>
        <include name="**/*gif"/>
        <include name="**/*jpg"/>
      </fileset>
      <fileset dir="../mvvm/resources">
        <include name="EvalLicense.txt"/>
      </fileset>
    </jar>
  </target>

  <target name="jar.servlets" depends="compile.gui">
    <jar destfile="${build.jar}/servlets.jar" index="yes">
      <fileset dir="${build.gui}">
        <include name="com/metavize/jsp/**"/>
      </fileset>
    </jar>
  </target>

  <target name="install.gui" depends="jar.gui">
    <copy file="${build.jar}/gui.jar" todir="${dist.mvvm.lib}"/>
  </target>

  <target name="install.servlets" depends="jar.servlets">
    <copy file="${build.jar}/servlets.jar" todir="${dist.mvvm.webstart}/WEB-INF/lib"/>
  </target>

  <target name="install.hier">
    <copy todir="${dist.mvvm.webstart}/WEB-INF/lib">
      <fileset refid="mvvm-client.jarset"/>
    </copy>

    <!-- filtered files -->
    <copy todir="${build.dist}" filtering="true">
      <fileset dir="${src.hier}">
        <exclude name="**/*.png"/>
        <exclude name="**/*.gif"/>
        <exclude name="**/*.jpg"/>
      </fileset>
    </copy>

    <!-- binary files -->
    <copy todir="${build.dist}" filtering="false">
      <fileset dir="${src.hier}">
        <include name="**/*.png"/>
        <include name="**/*.gif"/>
        <include name="**/*.jpg"/>
      </fileset>
    </copy>

    <chmod perm="ugo+rx">
      <fileset dir="${build.dist}/usr/bin"/>
    </chmod>
  </target>

  <target name="install.webstart" depends="jar.gui">

    <copy todir="${dist.mvvm.webstart}" flatten="true">
      <fileset refid="gui.jarset"/>
      <fileset refid="hibernate.gui.jarset"/>
      <fileset refid="jfreechart.jarset"/>
      <fileset refid="jnlp.jarset"/>
      <fileset refid="kunststoff.jarset"/>
      <fileset refid="log4j.jarset"/>
      <fileset refid="mvvm-client.jarset"/>
      <fileset refid="netbeans.jarset"/>
    </copy>

    <signjar keystore="./keystore" alias="software key"
             storepass="WbDP5uz\N" lazy="true">
      <fileset dir="${dist.mvvm.webstart}">
        <include name="*.jar"/>
      </fileset>
    </signjar>

  </target> <!-- install.webstart -->


  <!-- Javadoc target -->
  <target name="jdoc" depends="pkg.jar">
    <!-- "func.jdoc" defined in "common-targets.xml" -->
    <antcall target="func.jdoc">
      <param name="jdoc.src" value="${src.main}"/>
    </antcall>
  </target>

  <!-- 
    Copy source files to ${jdoc.bigtree.src}
    for inclusion in big JavaDoc generation
  -->
  <target name="bigjdoc">
    <copydir src="${src.main}"
      dest="${jdoc.bigtree.src}"
      includes="**/*.java"
      excludes="**/Test.java"
      forceoverwrite="true"/>
  </target>

</project>
