# -*-ruby-*-
# $HeadURL$
# Copyright (c) 2003-2007 Untangle, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# AS-IS and WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE, TITLE, or
# NONINFRINGEMENT.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#

require "./buildtools/buildtools.rb"
require "./buildtools/untangle-core.rb"

task :default => :devel
task :all => :devel

task :clean do
  Kernel.system( "make -C downloads distclean" )
  FileUtils.rm_rf(BuildEnv::SRC.devel) if File.exist?(BuildEnv::SRC.devel)
  FileUtils.rm_rf(BuildEnv::SRC.staging) if File.exist?(BuildEnv::SRC.staging)
  FileUtils.rm_rf("foo.dot") if File.exist?("foo.dot")
  FileUtils.rm_rf(FileList['debian/*'].select { |f| File.directory?(f) })
  ## Clear the stamp hashes
  Rake::StampHash.instance.clear
end

task :kindaclean do
  FileUtils.rm_rf(BuildEnv::SRC.devel) if File.exist?(BuildEnv::SRC.devel)
  FileUtils.rm_rf(BuildEnv::SRC.staging) if File.exist?(BuildEnv::SRC.staging)
  FileUtils.rm_rf("foo.dot") if File.exist?("foo.dot")
  FileUtils.rm_rf(FileList['debian/*'].select { |f| File.directory?(f) })
  ## Clear the stamp hashes
  Rake::StampHash.instance.clear
end

task :build => [BuildEnv::SRC['untangle-vm'], BuildEnv::SRC['untangle-client'], BuildEnv::SRC['node']]

task :devel => [BuildEnv::SRC['install'], BuildEnv::SRC.installTarget]

# See rake-util.rb, we check the arguments for "pkgs"
task :install => [BuildEnv::SRC['install'], BuildEnv::SRC.installTarget] do
  # FIXME: hrm, we're taking init scripts from the staging area under
  # debian/packagename/... and put it back under debian/ ????
  FileList["./debian/**/etc/init.d/*"].each do |f|
    FileUtils.cp(f, "./debian/#{File.basename(f)}.init")
  end
end

task :javadoc do
  dirs = 'uvm/api:uvm/localapi'
  cpath = FileList['staging/*'].map { |e| "#{e}/" }.join(':') + ":" + FileList['downloads/output/**/*jar'].join(':')
  css = "./buildtools/javadoc.css"

  Kernel.exec('javadoc', '-splitindex','-docencoding','UTF-8','-use','-docfilessubdirs', '-stylesheetfile', css, '-sourcepath', dirs, '-classpath', cpath,
              '-d', "#{BuildEnv::SRC.staging}/javadoc",
              '-subpackages', 'com.untangle', '-J-Xmx512m')
end
