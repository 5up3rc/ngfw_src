#! /bin/bash

# get a bunch of default values
source @PREFIX@/etc/default/untangle-vm

## Configure IPV4 parameters

procset() {
    if [ -f $1 ] ; then
        echo $2 > $1 ;
        if [ $? != 0 ] ; then
            echo "WARNING: Failed to set proc setting \"$1\""  >&2
            if [ "$3" != "" ] ; then
                echo "ERROR: Failed to set required proc setting \"$1\""  >&2
                exit 1
            fi
        fi
    else
        echo "WARNING: Missing proc setting \"$1\"" >&2
    fi
}

# make sure we're using untangle kernel.  There should be a cleaner
# way to do this. XX
if ! /sbin/modprobe -q iptable_tune; then
    echo "ERROR: kernel does not have Untangle extensions.  Need untangle-linux-image."
    exit 1
fi

#configure the dummy interface
/sbin/ifconfig dummy0 192.0.2.42 255.255.255.0 up

# check nfqueue
/sbin/modprobe -q nfnetlink_queue
if [ ! -f /proc/net/netfilter/nfnetlink_queue ]; then
    echo "ERROR: kernel does not have IP_NF_QUEUE" >& 2
    exit 1
elif [ "`cat /proc/net/netfilter/nfnetlink_queue | wc -l`x" != "0x" ] ; then
    echo "ERROR: nfqueue allocated, exiting" >&2
    exit 1
fi

# also check ip_queue
/sbin/modprobe -q ip_queue
if [ -f /proc/net/ip_queue ] && [ "`grep Peer /proc/net/ip_queue  | awk '{ print $4 }'`" != "0" ]; then
    echo "ERROR: ip_queue allocated, exiting" >&2
    exit 1
fi

# Not Optional
procset /proc/sys/net/ipv4/ip_forward 1 1
procset /proc/sys/net/ipv4/ip_nonlocal_bind 1 1
procset /proc/sys/net/ipv4/icmp_frag_accept 1 1
procset /proc/sys/net/ipv4/ip_local_port_range "3000   9000" 1
procset /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_loose 0 1
# Optional
procset /proc/sys/vm/swappiness 5
procset /proc/sys/net/ipv4/tcp_synack_retries 0
procset /proc/sys/net/ipv4/tcp_syncookies 1
procset /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_time_wait 30

## not sure if this is still applicable since we now use nfqueue, (rbs 9/29/06)
procset /proc/sys/net/ipv4/ip_queue_maxlen 16384

# remove tomcat persisted sessions
find @PREFIX@ -name SESSIONS.ser -exec rm -f '{}' ';'

# make self-signed certificate
# XXX this certificate could perhaps be more filled out with info
# gathered during the install
if [ ! -e @UVM_CONF@/keystore ]; then
    $JAVA_HOME/bin/keytool -genkey -keyalg RSA -keystore @UVM_CONF@/keystore \
        -alias tomcat -keypass changeit -storepass changeit \
        -dname "cn=$(hostname), ou=devices"
fi

# add user and uvm database just in case
echo "ALTER DATABASE mvvm RENAME TO uvm" | psql -X -U postgres template1 2>/dev/null
createuser -U postgres ${PG_CREATEUSER_OPTIONS} metavize 2>/dev/null
createuser -U postgres ${PG_CREATEUSER_OPTIONS} untangle 2>/dev/null
createdb -O postgres -U postgres uvm 2>/dev/null
createlang -U postgres plpgsql uvm 2>/dev/null

CLASSPATH="@UVM_HOME@/conf:@UVM_HOME@/lib/untangle-libuvm-bootstrap/"

#
# build environment tweeks
#
if [ "x" != "x@PREFIX@" ] ; then
    PATH=@PREFIX@/usr/bin:$PATH
fi

for f in @THIRDPARTY_UVM_LIB@/*jar ; do
    CLASSPATH="$CLASSPATH:$f"
done
for f in @THIRDPARTY_REPORTS_LIB@/*jar ; do
    CLASSPATH="$CLASSPATH:$f"
done

if [ ! -f $CD_INSTALL ] ; then
    JAVA_OPTS="-Dcom.untangle.isUntangleAppliance=true $JAVA_OPTS"
fi
if (lspci|grep -qi VMWare) then
    JAVA_OPTS="-Dcom.untangle.isInsideVM=true $JAVA_OPTS"
fi

unset DISPLAY
export PATH LD_LIBRARY_PATH CLASSPATH JAVA_HOME

#
# profiling tweeks
#
if [ "x$PROFILE_UVM_YJP" = "xyes" ] ; then
    echo "YJP profiling support enabled (concurrent garbage collection disabled)"
    YJP_HOME=/opt/yjp
    LD_LIBRARY_PATH=$YJP_HOME/bin/linux-x86-32:$LD_LIBRARY_PATH
    JAVA_OPTS="-agentlib:yjpagent $JAVA_OPTS"
fi

fdlimit=1
for i in `seq 21` ; do
    ulimit -n $fdlimit;
    fdlimit=$(($fdlimit*2));
done

exec $JAVA_HOME/bin/java \
    -Djavax.net.ssl.trustStore=@UVM_CONF@/cacerts \
    -Djava.endorsed.dirs=@ENDORSED_LIB@ \
    -Djava.library.path=@SRC_LIB@ \
    -Dbunnicula.home=@UVM_HOME@ \
    -Dargon.shield.cfg_file=@UVM_HOME@/conf/shield.cfg \
    -Djdbc.drivers=org.postgresql.Driver \
    -Dcom.untangle.isDevel=@IS_DEVEL@ \
    ${JAVA_OPTS} $* \
    com.untangle.uvm.engine.Main
