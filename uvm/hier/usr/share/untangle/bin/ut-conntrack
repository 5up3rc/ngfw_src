#!/usr/bin/python

import sys
import string
import traceback
import platform

def parse_segment(segment):
    if segment == None:
        return None
    segments = segment.split("=")
    if len(segments) != 2:
        return None
    return segments[1]

def parse_line(line):
    dict = {}
    try:
        line_parts = line.split()

        # the first field is the protocol
        dict['protocol'] = string.upper(line_parts[0]); 
        if dict['protocol'] != "TCP" and dict['protocol'] != "UDP": return None
        dict['protocol_id']    = int(line_parts[1]);

        # there are multiple "src" "dst" "sport" "dport" fields, this keeps track of how many we have seen
        src_count = 0
        dst_count = 0
        sport_count = 0
        dport_count = 0

        for part in line_parts:
            subparts = part.split("=")
            if len(subparts) != 2:
                continue
            
            varname = subparts[0]
            value = subparts[1]

            if varname == 'protocol':
                dict['protocol']       = string.upper(value);

            if varname == 'src':
                if src_count == 0:
                    dict['orig_src'] = value
                elif src_count == 1:
                    dict['reply_src'] = value
                src_count += 1

            if varname == 'dst':
                if dst_count == 0:
                    dict['orig_dst'] = value
                elif dst_count == 1:
                    dict['reply_dst'] = value
                dst_count += 1

            if varname == 'sport':
                if sport_count == 0:
                    dict['orig_src_port'] = int(value)
                elif sport_count == 1:
                    dict['reply_src_port'] = int(value)
                sport_count += 1

            if varname == 'dport':
                if dport_count == 0:
                    dict['orig_dst_port'] = int(value)
                elif dport_count == 1:
                    dict['reply_dst_port'] = int(value)
                dport_count += 1
            
            if varname == 'mark':
                dict['mark'] = int(value);
                
        dict['bypassed']      = ((dict['mark'] & 0x01000000) >> 24) != 0
        dict['qos_priority']  = ((dict['mark'] & 0x000F0000) >> 16)
        dict['client_intf']  = ((dict['mark'] & 0x000000FF) >> 0)
        dict['server_intf']  = ((dict['mark'] & 0x0000FF00) >> 8)

        return dict
    except Exception,e:
        print "Exception parsing line:"
        print line
        print "Exception:"
        traceback.print_exc(e)
        return None


print "{ javaClass: java.util.LinkedList, list : ["

ip_conntrack_file = open("/proc/net/ip_conntrack")

first=True
for line in ip_conntrack_file.readlines():

    # ignore all 127.0.0.1 traffic
    if "127.0.0.1" in line:
        continue

    dict = parse_line(line)

    if dict == None:
        continue;

    # ignore first line
    if first:
        first=False
    else:
        print ","

    print "{ protocol:\"%s\", clientIntf:\"%s\", serverIntf:\"%s\", preNatClient:\"%s\", preNatServer:\"%s\", preNatClientPort:\"%s\", preNatServerPort:\"%s\", postNatClient:\"%s\", postNatServer:\"%s\", postNatClientPort:\"%s\", postNatServerPort:\"%s\", qosPriority:\"%x\", bypassed:\"%s\", mark:\"%i\", markHex:\"0x%08x\", javaClass:\"com.untangle.uvm.SessionMonitorEntry\" }" % (
        dict['protocol'],
        dict['client_intf'],
        dict['server_intf'],
        dict['orig_src'],
        dict['orig_dst'],
        dict['orig_src_port'],
        dict['orig_dst_port'],
        dict['reply_dst'],
        dict['reply_src'],
        dict['reply_dst_port'],
        dict['reply_src_port'],
        dict['qos_priority'],
        dict['bypassed'],
        dict['mark'],
        dict['mark'])

print "] }"
