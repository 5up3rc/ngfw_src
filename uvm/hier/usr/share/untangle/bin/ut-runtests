#!/usr/bin/env python
import sys
sys.path.insert(0, '@PREFIX@/usr/lib/python2.5/')
import getopt

import unittest
import uvm
import untangle_tests
from   untangle_tests import *

from   untangle_tests.webfilter_tests import WebFilterTests

class ArgumentParser(object):
    def __init__(self):
        self.hostIP = None
        self.hostUsername = None
        self.hostKeyFile = None
        self.verbosity = 0
        self.logfile = '/tmp/unittest.log'

    def set_hostIP( self, arg ):
        self.hostIP = arg

    def set_username( self, arg ):
        self.username = arg

    def set_keyfile( self, arg ):
        self.password = arg

    def set_logfile( self, arg ):
        self.logfile = arg

    def increase_verbosity( self, arg ):
        self.verbosity += 1

    def parse_args( self ):
        handlers = {
            '-h' : self.set_hostIP,
            '-u' : self.set_username,
            '-i' : self.set_keyfile,
            '-l' : self.set_logfile,
            '-v' : self.increase_verbosity
        }

        try:
            (optlist, args) = getopt.getopt(sys.argv[1:], 'h:u:i:l:v')
            for opt in optlist:
                handlers[opt[0]](opt[1])
            return args
        except getopt.GetoptError, exc:
            print exc
            printUsage()
            exit(1)

def printUsage():
    sys.stderr.write( """\
%s Usage:
  optional args:
    -h client host IP (behind Untangle)
    -u client host SSH login
    -i client host SSH identity (key) file
    -l log file
    -v
""" % sys.argv[0] )

def exit(code):
    global parser
    if (code != 0):
        print "More details found in %s" % parser.logfile
    sys.exit(code)

parser = ArgumentParser()
script_args = parser.parse_args()
logfile = open(parser.logfile, 'w')

if (parser.hostIP != None):
    ClientControl.hostIP       = parser.hostIP
if (parser.hostUsername != None):
    ClientControl.hostUsername = parser.hostUsername
if (parser.hostKeyFile != None):
    ClientControl.hostKeyFile  = parser.hostKeyFile
ClientControl.verbosity   = parser.verbosity;
ClientControl.logfile = logfile;

# Verify the test enviroment is setup correctly
suite = unittest.TestLoader().loadTestsFromTestCase(TestEnvironmentTests)
# results = unittest.TextTestRunner( stream=logfile, verbosity=parser.verbosity ).run( suite )

# run each test individually for the basic tests
print "Testing Test Environment:"
for test in suite:
    results = unittest.TextTestRunner( stream=logfile, verbosity=parser.verbosity ).run( test )
    if (len(results.failures) > 0 or len(results.errors) > 0):
        print "Test FAILED  : %s " % test._testMethodName
        print "The test enviroment is not configured correctly. Aborting..."
        exit(1)
    else:
        print "Test success : %s " % test._testMethodName
print "done"

print "Testing Web Filter Base:"
suite = unittest.TestLoader().loadTestsFromTestCase(WebFilterTests)
for test in suite:
    results = unittest.TextTestRunner( stream=logfile, verbosity=parser.verbosity ).run( test )
    if (len(results.failures) > 0 or len(results.errors) > 0):
        print "Test FAILED  : %s " % test._testMethodName
    else:
        print "Test success : %s " % test._testMethodName

print "done"


print ""
print "More details found in %s" % parser.logfile
