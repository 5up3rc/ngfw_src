#
# Untangle OpenSSL configuration file
#
# The following environment variables are expected to be set:
#
#   UT_ROOT_PATH = location where the root CA files are stored
#   UT_EXT_MODE = sets the X509v3 extensions to be used:
#
#     req_ext_san = include subject alternative names section
#     req_ext_nil = omit subject alternative names section
#
#     When using copy_extensions it seems that only the ALT names get
#     copied from the reqest to the cert when signing, so we now include
#     the -extensions argument for both calls to openssl.
#
#   UT_SAN_LIST = the list of subject alternative names.  Must be set to
#   something even if not used or openssl will complain.  Best practice
#   is to list addresses as both DNS and IP for maximum compatibility.
#
#     "DNS:www.name.com,IP:1.2.3.4,DNS:1.2.3.4"
#
# The caller must also specify the extensions section to use:
#   v3_root = used when creating the root certificate and key
#   v3_fake = used when creating a MitM certificate
#   v3_host = used to create a cert for, and signed by, this server
#   v3_cert = used to request an externally signed cert for this server

##############################################################################
[ ca ]
default_ca  = CA_untangle

##############################################################################
[ CA_untangle ]
dir              = $ENV::UT_ROOT_PATH   # Where everything is kept
database         = $dir/index.txt       # database index file.
certificate      = $dir/untangle.crt    # The CA certificate
private_key      = $dir/untangle.key    # The private key
serial           = $dir/serial.txt      # The current serial number
RANDFILE         = $dir/random          # private random number file

unique_subject   = no                   # allow multiple certs with same subject
name_opt         = ca_default           # Subject Name options
cert_opt         = ca_default           # Certificate field options

copy_extensions  = copy                 # use the extensions in the request
default_days     = 7305                 # how long to certify for
default_md       = sha256               # which md to use.
preserve         = yes                  # keep passed DN ordering
policy           = policy_anything      # everything is optional

##############################################################################
[ policy_anything ]

# These are all optional.  It's not unusual to see a server cert with an
# empty CN and all of the actual host names stuffed in subject ALT names.

countryName            = optional
stateOrProvinceName    = optional
localityName           = optional
organizationName       = optional
organizationalUnitName = optional
commonName             = optional

##############################################################################
[ req ]
default_bits       = 2048
default_md         = sha256
distinguished_name = req_dname
attributes         = req_attr

# The extentions to add to certificate requests
req_extensions = $ENV::UT_EXT_MODE

# This sets a mask for permitted string types.
# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
string_mask = nombstr

##############################################################################
[ req_dname ]
countryName                     = Country Name (2 letter code)
countryName_default             = US
countryName_min                 = 2
countryName_max                 = 2

stateOrProvinceName             = State or Province Name (full name)
stateOrProvinceName_default     = Alaska

localityName                    = Locality Name (eg, city)
localityName_default            = Umkumiut

0.organizationName              = Organization Name (eg, company)
0.organizationName_default      = Internet Widgits Pty Ltd

organizationalUnitName          = Organizational Unit Name (eg, section)
organizationalUnitName_default  = Existential Hootenanny

commonName                      = Common Name (eg, YOUR name)
commonName_max                  = 64

emailAddress                    = Email Address
emailAddress_max                = 64

##############################################################################
[ req_attr ]

# This section must exist but can be empty

##############################################################################
[ req_ext_nil ]

# Request extensions when no SAN list is provided.  This is empty since
# no ALT names were provided but it must be here to prevent errors.

##############################################################################
[ req_ext_san ]

# Request extensions when a SAN list is provided.  Gets the ALT names list
# from the environment.

subjectAltName=$ENV::UT_SAN_LIST

##############################################################################
[ v3_root ]

# Extensions for the root certificate

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always
basicConstraints = CA:true
keyUsage = cRLSign, keyCertSign

##############################################################################
[ v3_cert ]

# Extensions for a local server certificate to be signed by 3rd party and
# used on this server.  We add usage flags for web, mail, and ipsec so the
# cert can be used with our web server, SSL mail inspection, and IPsec.

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always
basicConstraints = CA:false
keyUsage = nonRepudiation, digitalSignature, keyEncipherment, keyAgreement
extendedKeyUsage = serverAuth, emailProtection, 1.3.6.1.5.5.8.2.2

##############################################################################
[ v3_host ]

# Extensions for a local server certificate that will be signed by our CA
# and used on this server.  We add usage flags for web, mail, and ipsec so the
# cert can be used with our web server, SSL mail inspection, and IPsec.

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always
basicConstraints = CA:false
keyUsage = nonRepudiation, digitalSignature, keyEncipherment, keyAgreement
extendedKeyUsage = serverAuth, emailProtection, 1.3.6.1.5.5.8.2.2
nsComment = "Untangle Certificate Authority"

##############################################################################
[ v3_fake ]

# Extensions for generating a MitM certificate used by SSL Inspector.  We
# only add usage flags for web and mail here since that's all we process.

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always
basicConstraints = CA:false
keyUsage = nonRepudiation, digitalSignature, keyEncipherment, keyAgreement
extendedKeyUsage = serverAuth, emailProtection
nsComment = "Untangle Certificate Authority"
