# UVM server settings -*-sh-*-

## Simply function for taking a string, trim surround space, and the convert
## space separators to the token string. eg join_string " a b c " ";" -> "a;b;c"
join_string() {
    echo $1 | sed -e 's/^ *//g' -e 's/ *$//g' -e "s/ \\+/$2/g"
}

DEFAULT_DMZ="eth2"

# Use the following to configure your local installation
UVM_LOGDIR=@PREFIX@/var/log/uvm
UVM_RUNDIR=@PREFIX@/var/run
UVM_RESTART_PIDFILE=$UVM_RUNDIR/uvm-restart.pid
UVM_REBOOT_PIDFILE=$UVM_RUNDIR/uvm-reboot.pid
UVM_CONSOLE_LOG=${UVM_CONSOLE_LOG:-$UVM_LOGDIR/console.log}
UVM_WRAPPER_LOG=$UVM_LOGDIR/wrapper.log
UVM_GC_LOG=$UVM_LOGDIR/gc.log
UVM_CMD=@PREFIX@/usr/bin/uvm.sh
UVM_USER=root
## Defaults to 10000 in the code, set here if you want something else
UVM_SESSION_LIMIT=""

UVM_ARGS=""

# postgresql stuff
PG_VERSION=`dpkg -l postgresql | awk '/^ii/ { gsub(/\..-.*/, "", $3) ; print $3 }'`
if [[ "$PG_VERSION" == 7* ]] ; then
    PGDATA=${POSTGRES_DATA:-/var/lib/postgres/data}
    PGSERVICE="postgresql"
    PG_CREATEUSER_OPTIONS="-dA"
else
    PGDATA=${POSTGRES_DATA:-/var/lib/postgresql/${PG_VERSION}/main}
    PGSERVICE="postgresql-${PG_VERSION}"
    PG_CREATEUSER_OPTIONS="-dSR"
fi

# activation stuff...
CD_INSTALL=@UVM_HOME@/.cdinstall
REGISTRATION_DONE_FILE=@UVM_HOME@/.regdone
REGISTRATION_INFO_FILE=@UVM_HOME@/registration.info
REGISTRATION_URL=https://poptrack.untangle.com/register/custreg.php
ACTIVATION_KEY_FILE=@UVM_HOME@/activation.key
ACTIVATION_KEY_FILE_TMP=${ACTIVATION_KEY_FILE}.tmp
TMP_ARCHIVE=@PREFIX@/tmp/activation.tar
ACTIVATION_URL_TEMPLATE="https://activation.untangle.com/cgi-bin/get-license-key2.rb?license_key=%s&internal_ip=%s"
REMOTE_SUPPORT_ENABLE_URL_TEMPLATE="https://activation.untangle.com/cgi-bin/enable-remote-support.rb?license_key=%s&internal_ip=%s"
FAKE_KEY=0000-0000-0000-0000
KEY_VERIFICATION="@UVM_HOME@/conf/etc/mvverifykey"

## For testing, uncomment and setup interfaces here, the values below should not be modified.
#UVM_INTERNAL_INTF=""
#UVM_EXTERNAL_INTF=""
#UVM_DMZ_INTF=""

## For testing uncomment if you want to generate /etc/network/interfaces files.
# UVM_ENABLE_NETWORK_CFG="anything"

## Set internal and external interface to a default if it is not set, for testing
## modify the interface above, this setting will only change if the variable
## has not been set yet.
UVM_INTERNAL_INTF=${UVM_INTERNAL_INTF:-"eth1"}
UVM_EXTERNAL_INTF=${UVM_EXTERNAL_INTF:-"eth0"}

if [ "x${USER}" = "x" -o "x${USER}" = "xroot" ]; then
        UVM_NICENESS=0
else
        UVM_NICENESS=0
fi

UVM_ARGS="${UVM_ARGS} -Dargon.internal=${UVM_INTERNAL_INTF} -Dargon.external=${UVM_EXTERNAL_INTF}"

## Check for a DMZ Interface if the default is not set, (just check for eth2)
if [ -z "${UVM_DMZ_INTF}" ] && [ -d "/sys/class/net/${DEFAULT_DMZ}" ]; then
    UVM_DMZ_INTF=${DEFAULT_DMZ}
fi

if [ -n "${UVM_DMZ_INTF}" ]; then
    UVM_ARGS="${UVM_ARGS} -Dargon.dmz=${UVM_DMZ_INTF}"
fi

# if in the build, disable network configuration by default
if [ "x" != "x@PREFIX@" ]  && [ -z "${UVM_ENABLE_NETWORK_CFG}" ] ; then
    UVM_ARGS="${UVM_ARGS} -Dbunnicula.devel.nonetworking=true"
fi

## Append the session limit if it is set
if [ -n "${UVM_SESSION_LIMIT}" ]; then
    UVM_ARGS="${UVM_ARGS} -Dargon.sessionlimit=${UVM_SESSION_LIMIT}"
fi

#
# Profiling
#
PROFILE_UVM_YJP=${PROFILE_UVM_YJP=$:-no}
export PROFILE_UVM_YJP

# Use the Throughput or Concurrent-Low-Pause garbage collector?
# We normally want to use the Concurrent collector as it gives the lowest possible pause
# times.
USE_THROUGHPUT_COLLECTOR=no
if [ "x$PROFILE_UVM_YJP" = "xyes" ] ; then
    USE_THROUGHPUT_COLLECTOR=yes
fi

#
# Heap monitor thread
#
## Enable the heap monitor.
UVM_ARGS="${UVM_ARGS} -Dcom.untangle.uvm.memmonitor.enabled=true"

## Rate, kilobytes/second to start dumping stack traces.
#UVM_ARGS="${UVM_ARGS} -Dcom.untangle.uvm.memmonitor.rate=$((3 * 1024)"

## required minimum to start dumping memory (even if rate exceeds rate)
#UVM_ARGS="${UVM_ARGS} -Dcom.untangle.uvm.memmonitor.min=$(( 100 * 1024 ))"

## Level at which to just dump memory regardless of the rate
#UVM_ARGS="${UVM_ARGS} -Dcom.untangle.uvm.memmonitor.level=$(( 310 * 1024 ))"

## Poll frequence in milliseconds
#UVM_ARGS="${UVM_ARGS} -Dcom.untangle.uvm.memmonitor.poll=500"

## Minimum number of milliseconds in between dumping two thread dumps
#UVM_ARGS="${UVM_ARGS} -Dcom.untangle.uvm.memmonitor.interval=3000"

## Name of the file where the log should go, if unspecified, this goes to console.log
#UVM_ARGS="${UVM_ARGS} -Dcom.untangle.uvm.memmonitor.file=heapmonitor.log"

## Lifetime for positive phonebook lookups (millis)
#UVM_ARGS="${UVM_ARGS} -Dcom.untangle.uvm.user.phonebook.lifetime=300000"

## Lifetime for succesful wmi lookups (millis)
#UVM_ARGS="${UVM_ARGS} -Dcom.untangle.uvm.user.wmi.lifetime=240000"

## Lifetime for unsuccesful wmi lookups (millis)
#UVM_ARGS="${UVM_ARGS} -Dcom.untangle.uvm.user.wmi.negativelifetime=600000"

#
# JAVA options
#

# NOTE: this setting is required
# JAVA_HOME=/usr/lib/j2se/1.4/jre
JAVA_HOME=${JAVA_HOME:-@DEFAULT_JAVA_HOME@}

# The maximum heap/virtual sizes depend on the memory available
MEM=$(awk '/MemTotal/ { print $2 }' < /proc/meminfo)
if [ $MEM -gt 1900000 ] ; then
  MAX_HEAP_SIZE=640m
  MAX_VIRTUAL_SIZE=1500000
  MAX_UCB_DB_MEG=40
elif [ $MEM -gt 900000 ] ; then
  MAX_HEAP_SIZE=320m
  MAX_VIRTUAL_SIZE=950000
  MAX_UCB_DB_MEG=16
else
  MAX_HEAP_SIZE=220m
  MAX_VIRTUAL_SIZE=800000
  MAX_UCB_DB_MEG=8
fi

## Limit Berkeley DB caching to 5% of java heap
UVM_ARGS="${UVM_ARGS} -Dje.maxMemory=${MAX_UCB_DB_MEG}"

if [ "x$USE_THROUGHPUT_COLLECTOR" = "xyes" ] ; then
# Goals: 85% throughput (don't set maxpausegcmillis here, you'll regret it)
    JAVA_OPTS_SUN="-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseParallelGC -XX:GCTimeRatio=6"
else
    JAVA_OPTS_SUN="-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode -XX:+CMSIncrementalPacing -XX:CMSIncrementalDutyCycleMin=0 -XX:CMSIncrementalDutyCycle=10 -XX:+UseParNewGC -XX:NewRatio=4"
fi
JAVA_OPTS_BEA="-Xgcpause -Xgcprio:pausetime"
# Java Options:
#  Minimum at 128m so we don't blow out smaller (512MB) machines
#  Maximum at 320m so we leave a lot of space for stacks but still have enough for 10,000 sessions
#  Stack size 96k which is small enough but still works
JAVA_OPTS_COMMON="-verbose:gc -Xloggc:$UVM_GC_LOG -Xms128m -Xmx${MAX_HEAP_SIZE} -Xss96k -server"
if [ "x" != "x@PREFIX@" ] ; then
    JAVA_OPTS_COMMON="-ea $JAVA_OPTS_COMMON"
fi

if [ -f $JAVA_HOME/bin/console ] ; then
    JAVA_OPTS="$JAVA_OPTS_COMMON $JAVA_OPTS_BEA" #   BEA
else
    JAVA_OPTS="$JAVA_OPTS_COMMON $JAVA_OPTS_SUN" #   SUN
fi

export JAVA_OPTS
