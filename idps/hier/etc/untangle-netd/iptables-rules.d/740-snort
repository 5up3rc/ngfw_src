#!/bin/dash

IPTABLES=${IPTABLES:-iptables}
TABLE_NAME=mangle
CHAIN_NAME=snort-scanning
SNORT_QUEUE_NUM=2930
SNORT_MAX_SCAN_SIZE=$(python -c "from uvm.settings_reader import get_node_settings_item; print get_node_settings_item('untangle-node-idps','max_scan_size');")
if [ -z "${SNORT_MAX_SCAN_SIZE}" -o "${SNORT_MAX_SCAN_SIZE}" = "None" ] ; then
    SNORT_MAX_SCAN_SIZE=1024
fi

debug()
{
    echo "[DEBUG:`date`] $*"
}

is_queue_open()
{
    local t_snort_pid
    local t_queue_pid

    t_snort_pid="invalid"

    if [ ! -f /proc/net/netfilter/nfnetlink_queue ]; then
        echo "[`date`] The netfilter nfnetlink_queue does not exist - not inserting rules for snort"
        return 1
    fi

    t_queue_portid=`awk -v queue=${SNORT_QUEUE_NUM} '{ if ( $1 == queue ) print $2 }' /proc/net/netfilter/nfnetlink_queue`

    if [ -z "${t_queue_portid}" ]; then
        echo "[`date`] The snort netfilter queue is not open - not inserting rules for snort"
        return 1
    fi
   
    return 0
}

flush_snort_iptables_rules()
{
    # create and flush a new chain for our traffic
    ${IPTABLES} -t ${TABLE_NAME} -N ${CHAIN_NAME} >/dev/null 2>&1
    ${IPTABLES} -t ${TABLE_NAME} -F ${CHAIN_NAME}

    # remove previous rules to call the chain if they exist
    ${IPTABLES} -t ${TABLE_NAME} -D PREROUTING -j ${CHAIN_NAME} -m comment --comment "snort scanning" >/dev/null 2>&1
}

insert_snort_iptables_rules()
{
    # we don't care about traffic to or from loopback addresses
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -s 127.0.0.0/8 -j RETURN -m comment --comment "Bypass loopback traffic"
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -d 127.0.0.0/8 -j RETURN -m comment --comment "Bypass loopback traffic"

    # we also don't want to look at any traffic owned by the local machine
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -m mark --mark 0x1000000/0x1000000 -j RETURN -m comment --comment "Ignore local traffic"

    # special hook to allow bypass of a development machine or network
    if [ ! -z ${SNORT_DEV_NETWORK} ]; then
        ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -s ${SNORT_DEV_NETWORK} -j RETURN
        ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -d ${SNORT_DEV_NETWORK} -j RETURN
    fi

    # all other traffic will be handed off to our netfilter queue
    ${IPTABLES} -t mangle -A ${CHAIN_NAME} -j NFQUEUE --queue-num ${SNORT_QUEUE_NUM} --queue-bypass -m connbytes --connbytes 0:${SNORT_MAX_SCAN_SIZE} --connbytes-dir both --connbytes-mode bytes -m comment --comment "queue for snort"

    # ----- now that we have created our table we need some rules to send us traffic
    # ----- these next rules will grab only traffic that we need to classify

    ${IPTABLES} -t ${TABLE_NAME} -A PREROUTING -j ${CHAIN_NAME} -m comment --comment "snort scanning" 2>/dev/null

    return 0
}

## Start of script
if [ -f /etc/default/untangle-snort ]; then
    . /etc/default/untangle-snort
fi

## If the queue is open generate the new rules
flush_snort_iptables_rules

is_queue_open && {
    echo "[`date`] snort is running. Inserting rules."
    insert_snort_iptables_rules
}

true
