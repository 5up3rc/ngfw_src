#! /bin/bash

ourInit() {
if [ -x /usr/sbin/invoke-rc.d ] && [ ! "`readlink /usr/sbin/invoke-rc.d`" = /bin/true ] ; then
  invoke-rc.d $1 $2
else
  /etc/init.d/$1 $2
fi
}

UVM_LOGDIR="/var/log/uvm"
UVM_CACHEDIR="/var/lib/uvm"

USER=root
GROUP=adm

# modify limit to support many file descriptors
LIMITS_FILE=/etc/security/limits.conf
LIMITS_LINE="${USER}    soft    nofile  128000"
LIMITS_LINE2="${USER}   hard    nofile  128000"

if [ -z "`grep ${USER} ${LIMITS_FILE}`" ] ; then
    echo ${LIMITS_LINE} >> ${LIMITS_FILE}
    echo ${LIMITS_LINE2} >> ${LIMITS_FILE}
else
    sed -i -e "s|^${USER}.*soft.*|${LIMITS_LINE}|g" ${LIMITS_FILE}
    sed -i -e "s|^${USER}.*hard.*|${LIMITS_LINE2}|g" ${LIMITS_FILE}
fi

# tell PAM (login and su) to read the limits file
LOGIN_LINE="session    required   pam_limits.so"

LOGIN_FILE=/etc/pam.d/login
if [ -z "`grep pam_limits.so ${LOGIN_FILE}`" ] ; then
    echo ${LOGIN_LINE} >> ${LOGIN_FILE}
else
    sed -i -e "s|^.*pam_limits.so.*|${LOGIN_LINE}|g" ${LOGIN_FILE}
fi

LOGIN_FILE=/etc/pam.d/su
if [ -z "`grep pam_limits.so ${LOGIN_FILE}`" ] ; then
    echo ${LOGIN_LINE} >> ${LOGIN_FILE}
else
    sed -i -e "s|^.*pam_limits.so.*|${LOGIN_LINE}|g" ${LOGIN_FILE}
fi

# right permissions for all those dirs
/bin/chown -R $USER:$GROUP ${UVM_LOGDIR} ${UVM_CACHEDIR}
/bin/chmod 775 ${UVM_LOGDIR} ${UVM_CACHEDIR}

# 9.x change sources.list to point to stable-10
if [ -f /etc/apt/sources.list.d/untangle.list ] ; then
    sed -i 's/\sstable\s/ stable-9 /' /etc/apt/sources.list.d/untangle.list
fi

# set up uvm to start at boot
if [ -x "/etc/init.d/untangle-vm" ]; then
    # (remove to allow replacement when upgrading from 5.2 to 5.3)
    update-rc.d -f untangle-vm remove
    update-rc.d untangle-vm defaults 95 5 > /dev/null
fi

## Nuke the work directory for the servlets.
rm -rf /usr/share/untangle/work/tomcat

# It's almost never right to just start the untangle-vm after installation, so let
# the user know what to do next.
if [ -z "$2" ]; then
    if uname -r | grep -iq "untangle"; then
        echo "**************************************************************"
        echo "Untangle installed.  Start with: /etc/init.d/untangle-vm start"
        echo "**************************************************************"
    else
        echo "********************************************************"
        echo "Untangle installed.  Need to reboot into Untangle kernel"
        echo "********************************************************"
    fi
fi

/etc/init.d/apache2 reload

rm -f /etc/untangle/monit.d/uvm*
touch /etc/untangle/monit-to-restart

## Restart untangle-hardware-config just in case.
if [ -x "/etc/init.d/untangle-hardware-config" ]; then
    ourInit untangle-hardware-config restart
fi

# 9.2 upgrade
# remove obsolete stuff
rm -rf /usr/share/untangle/autodump
rm -rf /usr/share/untangle/db
rm -rf /usr/share/untangle/pycli/uvm

# 9.3 upgrade - remove kav conversion cron job
rm -f /var/spool/cron/atjobs/* 
if [ -x "/etc/init.d/atd" ]; then
    ourInit atd restart
fi
rm -f /var/log/uvm/schema*
rm -f /var/log/uvm/iptables*
rm -f /usr/share/untangle/conf/openvpn/packet-filter-rules
find /usr/share/untangle/settings -name '*.tmp' -exec rm -rf {} \;

# 9.3.2 remove obsolete files
rm -rf /etc/untangle-net-alpaca/iptables-rules.d/800-qos
rm -rf /etc/untangle-net-alpaca/iptables-rules.d/*single-nic*
rm -rf /etc/apache2/untangle-conf.d/proxy.conf
rm -rf /etc/apache2/mods-enabled/proxy*


exit 0
