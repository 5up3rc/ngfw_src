<?xml version="1.0" encoding="ISO-8859-1" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_0.xsd"
    version="2.0">

  <tlibversion>1.1</tlibversion>
  <shortname>quar_end_user</shortname>
  <info>Quarantine End User Application Tag library</info>

  <!--
    Includes everything between its tags if there are
    messages of "type" "error" or "info"
  -->
  <tag>
    <name>hasMessages</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.HasMessagesTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <attribute>
        <name>type</name>
        <required>true</required>
    </attribute>    
  </tag>

  <!--
    Tag which includes/excludes nested content based
    on the presence/abscence of an InboxIndex
  -->
  <tag>
    <name>hasInboxRecords</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.HasInboxIndexTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <attribute>
      <name>includeIfTrue</name>
      <required>true</required>
    </attribute>      
  </tag>
  
  <!--
    Used within an forEachInboxRecord tag, to access the "current"
    InboxRecord.  Valid values for "prop" are:
    "mailid"
    "from"
    "subject"
    "score"
    "idate"
    "size"
    It then outputs the String corresponding to the "prop"
  -->
  <tag>
    <name>inboxRecord</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.InboxRecordTag</tagclass>
    <bodycontent>empty</bodycontent>
    <attribute>
      <name>prop</name>
      <required>true</required>
    </attribute>
    <attribute>
      <name>JSEscape</name>
      <required>false</required>
    </attribute>     
  </tag>

  <!--
    Used to conditionaly include code if there is an attachment
    to the current InboxRecord.  Like inboxRecord tag, must be within
    a "forEachInboxRecord" tag
  -->
  <tag>
    <name>hasAttachments</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.InboxRecordHasAttachmentTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <attribute>
      <name>includeIfTrue</name>
      <required>true</required>
    </attribute>      
  </tag>

  <!--
    Tag outputs the total number of records in the current index, or
    unknown if there is no current index
  -->
  <tag>
    <name>indexNumRecords</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.InboxNumRecordsTag</tagclass>
    <bodycontent>empty</bodycontent>
  </tag>

  <!--
    Tag outputs the total size of records in the current index, or
    unknown if there is no current index
  -->
  <tag>
    <name>indexSizeRecords</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.InboxSizeRecordsTag</tagclass>
    <bodycontent>empty</bodycontent>
  </tag>
  
  <!--
    Tag outputs the current email address, or null if not set
  -->
  <tag>
    <name>currentAddress</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.CurrentEmailAddressTag</tagclass>
    <bodycontent>empty</bodycontent>
  </tag>

  <!--
    Tag outputs the max days an inbox record can be interned, or null if not set
  -->
  <tag>
    <name>maxDaysToIntern</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.MaxDaysToInternTag</tagclass>
    <bodycontent>empty</bodycontent>
  </tag>

  <!--
    Tag outputs the max days an inbox can remain idle, or null if not set
  -->
  <tag>
    <name>maxDaysIdleInbox</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.MaxDaysIdleInboxTag</tagclass>
    <bodycontent>empty</bodycontent>
  </tag>

  <!--
    Tag outputs the current auth token (obfuscated "currentAddress").  Defaults
    to URL encoded
  -->
  <tag>
    <name>currentAuthToken</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.CurrentAuthTokenTag</tagclass>
    <bodycontent>empty</bodycontent>
    <attribute>
      <name>encoded</name>
      <required>false</required>
    </attribute>    
  </tag>
  
  <!--
    Used within an forEachSafelistEntry tag, to access the "current"
    entry. "encoded" will return a base64 encoded version of the address
  -->
  <tag>
    <name>safelistEntry</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.SafelistEntryTag</tagclass>
    <bodycontent>empty</bodycontent>
    <attribute>
      <name>encoded</name>
      <required>true</required>
    </attribute>
  </tag>

  <tag>
    <name>hasSafelist</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.HasSafelistTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <attribute>
      <name>includeIfTrue</name>
      <required>true</required>
    </attribute>  
  </tag>    

  <!--
    Tag outputs constants for keys/values used in forms.  Lets us avoid having
    to either hardcode values (bad, since they are in Java code) or use Java tags
    within HTML (ugly and confusing).  You must declare either a "valueName"
    or "keyName" attribute.  If both are declared, output if undefined.

    Valid values for "keyName" include:

    "tkn" - key used to hold the "currentAuthToken"
    "action" - the action to be taken (either "purge", "rescue", "rescue" or "viewibx")
    "mailid" - the key used to hold the mail ID in forms
    "draddr" - the address for requesting a new digest
    "sort"
    "ascend"
    "first"
    "sladdr"
    "rowsperpage"

    Valid values for "valueName" include:

    "purge" - do the purge action
    "rescue" - do the rescue action
    "refresh" - do the refresh action
    "viewibx" - do the "view your inbox" action (really - no action)
    "slview"
    "sladd"
  -->
  <tag>
    <name>constants</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.ConstantsTag</tagclass>
    <bodycontent>empty</bodycontent>
    <attribute>
      <name>valueName</name>
      <required>false</required>
    </attribute>
    <attribute>
      <name>keyName</name>
      <required>false</required>
    </attribute>       
  </tag>

<!--   For remapping -->
  <tag>
    <name>receivingRemapsEntry</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.ReceivingRemapsEntryTag</tagclass>
    <bodycontent>empty</bodycontent>
    <attribute>
      <name>encoded</name>
      <required>true</required>
    </attribute>
  </tag>

  <tag>
    <name>isReceivesRemaps</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.IsReceivesRemapsTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <attribute>
      <name>includeIfTrue</name>
      <required>true</required>
    </attribute>  
  </tag>    

  <tag>
    <name>isRemapped</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.IsRemappedTag</tagclass>
    <bodycontent>JSP</bodycontent>
    <attribute>
      <name>includeIfTrue</name>
      <required>true</required>
    </attribute>      
  </tag>

  <tag>
    <name>remappedTo</name>
    <tagclass>com.untangle.node.smtp.web.euv.tags.RemappedToTag</tagclass>
    <bodycontent>empty</bodycontent>
    <attribute>
      <name>encoded</name>
      <required>true</required>
    </attribute>    
  </tag>

  <function>
    <name>remappedTo</name>
    <function-class>com.untangle.node.smtp.web.euv.tags.QuarantineFunctions</function-class>
    <function-signature>java.lang.String remappedTo( javax.servlet.jsp.PageContext, boolean )</function-signature>
  </function>

  <function>
    <name>maxDaysToIntern</name>
    <function-class>com.untangle.node.smtp.web.euv.tags.QuarantineFunctions</function-class>
    <function-signature>java.lang.String maxDaysToIntern( javax.servlet.jsp.PageContext )</function-signature>
  </function>

  <function>
    <name>totalMessageCount</name>
    <function-class>com.untangle.node.smtp.web.euv.tags.QuarantineFunctions</function-class>
    <function-signature>java.lang.String totalMessageCount( javax.servlet.jsp.PageContext )</function-signature>
  </function>

  <function>
    <name>jsonSafelist</name>
    <function-class>com.untangle.node.smtp.web.euv.tags.QuarantineFunctions</function-class>
    <function-signature>java.lang.String jsonSafelist( javax.servlet.jsp.PageContext )</function-signature>
  </function>

  <function>
    <name>jsonReceivingRemaps</name>
    <function-class>com.untangle.node.smtp.web.euv.tags.QuarantineFunctions</function-class>
    <function-signature>java.lang.String jsonReceivingRemaps( javax.servlet.jsp.PageContext )</function-signature>
  </function>

</taglib>
