#!/bin/sh

exec >> @MVVM_LOG@/openvpn.log 2>&1

GLOBALS=@MVVM_HOME@/openvpn/globals

## There must be a configuration file 
if [ -r ${GLOBALS} ]; then
    . ${GLOBALS}
else
    echo "Unable to load the openvpn configuration file ${BASE_CONFIG_FILE}"
    exit -2
fi

## Convert spaces to _
commonName=`removeSpaces $1`

validateBase()
{
    if [ "${commonName}x" = "x" ]; then
        echo "Must specify a common name for the key"
        exit -3
    fi
    
    ## Also have to check the ca.crt and the ca.key
    if [ ! -d ${KEY_GEN_DIR} ] || [ ! -d ${KEY_DIR} ] || [ ! -f ${INDEX_FILE} ] || 
        [ ! -f ${SERIAL_FILE} ]; then
        echo "The base is not currently initialized"
        exit -4
    fi
}

function revokeClient()
{
    local clientCrl=`mktemp`
    local revokeTest=`mktemp`
    local clientCrt=`getClientCrtFile ${commonName}`
    local clientKey=`getClientKeyFile ${commonName}`

    if [ ! -f ${clientCrt} ]; then
        echo "The client certificate for '${commonName} does not exist"
        return
    fi

    ## This is not necessary since the keystore keeps a copy of every cert it
    ## ever generates in ${serialNumber}.pem
    ## 
    ## local clientRevokedCrt=`getClientRevokedCrtFile ${commonName}`

    export COMMON_NAME=${commonName}
    export KEY_DN_QUALIFIER=${DN_QUALIFIER_CLIENT}

    # revoke key and generate a new CRL
    ${OPENSSL} ca -revoke ${clientCrt} -config ${OPENSSL_CFG_FILE}
    
    # generate a new CRL
    ${OPENSSL} ca -gencrl -out ${clientCrl} -config ${OPENSSL_CFG_FILE}
    cat ${CA_CRT} ${clientCrl} > ${revokeTest}
    
    # verify the revocation
    ${OPENSSL} verify -CAfile ${revokeTest} -crl_check ${clientCrt}
    
    ## Remove the key.
    ## Consider shredding the private key.
    rm -f ${clientKey}
    
    ## Move the cert out of the way
    rm -f ${clientCrt}
    
    rm -f ${clientCrl}
    rm -f ${revokeTest}
}

if [ -n "`isRevoked ${commonName}`" ]; then
    echo "The cert for ${commonName} is already revoked"
    exit 0
fi

## Check for the USB key if necessary
validateUsbKey

## Validate that the base has been generated
validateBase

## Generate the client key
revokeClient

## Update the client status file
updateClientStatus




