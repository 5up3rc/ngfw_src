TEMPLATE=SubRep1H3C2F
REPORT_MAX_LENGTH=15
REPORT_NAME=EmailVirus
REPORT_TITLE=Top @REPORT_MAX_LENGTH@ Email Viruses

EXTRA_PARAM_1.name=virusVendor
EXTRA_PARAM_1.type=java.lang.String

FIELD_1.name=name
FIELD_1.type=String
FIELD_2.name=count
FIELD_2.type=Long
FIELD_3.name=top_count
FIELD_3.type=Long
FIELD_4.name=all_count
FIELD_4.type=Long

QUERY=\
(SELECT name, count, top_count, all_count \
   FROM (SELECT virus_name AS name, COUNT(virus_name) \
           FROM tr_virus_evt_mail \
           WHERE NOT clean \
             AND time_stamp >= $P{startTime} \
             AND time_stamp < $P{endTime} \
             AND vendor_name = $P{virusVendor} \
           GROUP BY virus_name \
           ORDER BY count DESC \
           LIMIT @REPORT_MAX_LENGTH@) AS foo, \
        (SELECT SUM(count) AS top_count \
           FROM (SELECT COUNT(virus_name) \
                   FROM tr_virus_evt_mail \
                   WHERE NOT clean \
                     AND time_stamp >= $P{startTime} \
                     AND time_stamp < $P{endTime} \
                     AND vendor_name = $P{virusVendor} \
                   GROUP BY virus_name \
                   ORDER BY count DESC \
                   LIMIT @REPORT_MAX_LENGTH@) AS foo2) AS foo3, \
        (SELECT SUM(count) AS all_count \
           FROM (SELECT COUNT(virus_name) \
                   FROM tr_virus_evt_mail \
                   WHERE NOT clean \
                     AND time_stamp >= $P{startTime} \
                     AND time_stamp < $P{endTime} \
                     AND vendor_name = $P{virusVendor} \
                   GROUP BY virus_name \
                   ORDER BY count DESC) AS foo4) AS foo5 \
   ORDER BY count DESC) \
 UNION \
(SELECT name, count, top_count, all_count \
   FROM (SELECT virus_name AS name, COUNT(virus_name) \
           FROM tr_virus_evt_smtp \
           WHERE NOT clean \
             AND time_stamp >= $P{startTime} \
             AND time_stamp < $P{endTime} \
             AND vendor_name = $P{virusVendor} \
           GROUP BY virus_name \
           ORDER BY count DESC \
           LIMIT @REPORT_MAX_LENGTH@) AS foo, \
        (SELECT SUM(count) AS top_count \
           FROM (SELECT COUNT(virus_name) \
                   FROM tr_virus_evt_smtp \
                   WHERE NOT clean \
                     AND time_stamp >= $P{startTime} \
                     AND time_stamp < $P{endTime} \
                     AND vendor_name = $P{virusVendor} \
                   GROUP BY virus_name \
                   ORDER BY count DESC \
                   LIMIT @REPORT_MAX_LENGTH@) AS foo2) AS foo3, \
        (SELECT SUM(count) AS all_count \
           FROM (SELECT COUNT(virus_name) \
                   FROM tr_virus_evt_smtp \
                   WHERE NOT clean \
                     AND time_stamp >= $P{startTime} \
                     AND time_stamp < $P{endTime} \
                     AND vendor_name = $P{virusVendor} \
                   GROUP BY virus_name \
                   ORDER BY count DESC) AS foo4) AS foo5 \
   ORDER BY count DESC)

LEFT.label=Virus Name
MIDDLE.label=Count
RIGHT.label=%

LEFT.expr=$F{name}
MIDDLE.expr=$F{count}
RIGHT.expr=Math.round($F{count}.doubleValue() / $F{all_count}.doubleValue() * 100) + "%"

LEFT.total=Top @REPORT_MAX_LENGTH@ Totals:
MIDDLE.total=$F{top_count}
RIGHT.total=(null != $F{top_count} ? Math.round($F{top_count}.doubleValue() / $F{all_count}.doubleValue() * 100) + "%" : "100%")

LEFT.alltotal=Overall Total:
MIDDLE.alltotal=$F{all_count}
RIGHT.alltotal="100%"

UNIQUE_COUNT.expr=$F{name}
