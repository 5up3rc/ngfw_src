/*
 * $HeadURL$
 * Copyright (c) 2003-2007 Untangle, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License, version 2,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * AS-IS and WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE, TITLE, or
 * NONINFRINGEMENT.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 */

package com.untangle.node.protofilter;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.untangle.node.util.UvmUtil;
import com.untangle.uvm.security.Tid;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.IndexColumn;

/**
 * Settings for the ProtoFilter node.
 *
 * @author <a href="mailto:amread@untangle.com">Aaron Read</a>
 * @version 1.0
 */
@Entity
@Table(name="n_protofilter_settings", schema="settings")
public class ProtoFilterSettings implements java.io.Serializable
{
    private static final long serialVersionUID = 266434887860496780L;

    private Long id;
    private Tid tid;
    private int byteLimit  = 2048;
    private int chunkLimit = 10;
    private String unknownString = "[unknown]";
    private boolean stripZeros = true;
    private List<ProtoFilterPattern> patterns = null;

    /**
     * Hibernate constructor.
     */
    private ProtoFilterSettings() {}

    /**
     * Real constructor
     */
    public ProtoFilterSettings(Tid tid)
    {
        this.tid = tid;
        this.patterns = new ArrayList<ProtoFilterPattern>();
    }

    @Id
    @Column(name="settings_id")
    @GeneratedValue
    private Long getId() { return id; }
    private void setId(Long id) { this.id = id; }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="tid", nullable=false)
    public Tid getTid() { return tid; }
    public void setTid(Tid tid) { this.tid = tid; }

    public int getByteLimit() { return this.byteLimit; }
    public void setByteLimit(int i) { this.byteLimit = i; }

    public int getChunkLimit() { return this.chunkLimit; }
    public void setChunkLimit(int i) { this.chunkLimit = i; }

    public String getUnknownString() { return this.unknownString; }
    public void setUnknownString(String s) { this.unknownString = s; }

    public boolean isStripZeros() { return this.stripZeros; }
    public void setStripZeros(boolean b) { this.stripZeros = b; }

    /**
     * Pattern rules.
     *
     * @return the list of Patterns
     */
    @OneToMany(fetch=FetchType.EAGER)
    @Cascade({ org.hibernate.annotations.CascadeType.ALL,
                   org.hibernate.annotations.CascadeType.DELETE_ORPHAN })
    @JoinColumn(name="settings_id")
    @IndexColumn(name="position")
    public List<ProtoFilterPattern> getPatterns() { return UvmUtil.eliminateNulls(patterns); }
    public void setPatterns(List<ProtoFilterPattern> s) { this.patterns = s; }
}
