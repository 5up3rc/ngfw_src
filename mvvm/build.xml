<?xml version="1.0"?>

<!--
Copyright (c) 2004, 2005 Metavize Inc.
All rights reserved.

This software is the confidential and proprietary information of
Metavize Inc. ("Confidential Information").  You shall
not disclose such Confidential Information.

$Id: build.xml,v 1.94 2005/03/25 20:02:46 rbscott Exp $
-->

<project name="mvvm" basedir="." default="all">

  <import file="../buildtools/buildmagic.xml"/>

  <!-- properties -->
  <property name="mnp.package" value="com.metavize.mvvm.smith.mnp.requests"/>
  <property name="mnp.xsd" value="../../xenon/xml/mnp.xsd"/>

  <!-- main targets -->
  <target name="pkg.gensrc"  depends="gensrc.servlets, gensrc.version"/>
  <target name="pkg.compile"
          depends="compile.bootstrap, compile.mvvm-client,
                   compile.mvvm, compile.servlets"/>
  <target name="pkg.jar"
          depends="jar.bootstrap, jar.mvvm-client, jar.mvvm,
                   jar.servlets"/>
  <target name="pkg.install"
          depends="install.hier, install.bootstrap,
                   install.mvvm-client, install.mvvm, install.servlets,
                   install.thirdparty, install.reports"/>
  <target name="pkg.clean" depends="clean.nuke"/>



  <target name="gensrc.servlets">
    <!-- We need fork to avoid class duplication bug in ant -->
    <java classname="org.apache.jasper.JspC"
          fork="true"
          failonerror="true">
      <arg line="-d ${build.gensrc}"/>
      <arg line="-p com.metavize.jsp"/>
      <arg line="-webinc ${build.gensrc}/web-fragment.xml"/>
      <arg line="-uriroot ${src.hier}/${suffix.mvvm.web}/session-dumper/"/>
      <classpath refid="mvvm.thirdparty.classpath"/>
      <classpath refid="tomcat.classpath"/>
    </java>
    <echo message="Adding JSP servlet mappings to web.xml"/>
    <loadfile property="sd-generated-web.xml" srcFile="${build.gensrc}/web-fragment.xml"/>
    <copy file="${src.hier}/${suffix.mvvm.web}/session-dumper/WEB-INF/web.xml" toFile="${dist.mvvm.web}/session-dumper/WEB-INF/web.xml" overwrite="true">
      <filterset>
        <filter token="JSP_PRE_COMPILED_SERVLETS" value="${sd-generated-web.xml}"/>
      </filterset>
    </copy>
    <!-- We need fork to avoid class duplication bug in ant -->
    <java classname="org.apache.jasper.JspC"
          fork="true"
          failonerror="true">
      <arg line="-d ${build.gensrc}"/>
      <arg line="-p com.metavize.jsp"/>
      <arg line="-webinc ${build.gensrc}/web-fragment.xml"/>
      <arg line="-uriroot ${src.hier}/${suffix.mvvm.web}/reports/"/>
      <classpath refid="mvvm.thirdparty.classpath"/>
      <classpath refid="tomcat.classpath"/>
    </java>
    <echo message="Adding JSP servlet mappings to web.xml"/>
    <loadfile property="rp-generated-web.xml" srcFile="${build.gensrc}/web-fragment.xml"/>
    <copy file="${src.hier}/${suffix.mvvm.web}/reports/WEB-INF/web.xml" toFile="${dist.mvvm.web}/reports/WEB-INF/web.xml" overwrite="true">
      <filterset>
        <filter token="JSP_PRE_COMPILED_SERVLETS" value="${rp-generated-web.xml}"/>
      </filterset>
    </copy>
  </target>

  <target name="gensrc.version">
    <mkdir dir="${build.gensrc}/com/metavize/mvvm/engine"/>
    <copy file="resources/Version.java" toFile="${build.gensrc}/com/metavize/mvvm/engine/Version.java" overwrite="true"/>
    <exec executable="/bin/sh" failonerror="true">
      <arg value="-c"/>
      <arg value="/bin/sed s/\&quot;VERSION\&quot;/\&quot;`cat ../../PUBVERSION`\&quot;/g -i ./output/gensrc/com/metavize/mvvm/engine/Version.java"/>
    </exec>
  </target>

  <target name="gensrc.xdoclet" depends="prepare">
    <!-- map all files to stamp file, if any are newer, run xdoclet -->
    <fileset id="xdoclet.fileset" dir="main" includes="**/*.java">
      <contains text="@hibernate"/>
      <depend targetdir="${build.gensrc}">
        <mapper type="merge" from="*pat$$" to="stamp-xdoclet"/>
      </depend>
    </fileset>

    <pathconvert pathsep=" " refid="xdoclet.fileset" property="xdocletList"/>
    <if>
      <not><equals arg1="${xdocletList}" arg2="" /></not>
      <then>
        <hibernatedoclet destdir="${build.gensrc}"
                         excludedtags="@version,@author,@todo">
          <fileset refid="xdoclet.fileset"/>
          <hibernate version="2.0"/>
        </hibernatedoclet>

        <!-- xdoclet is re re -->
        <exec executable="${util.bin}/fix-hbm">
          <arg value="${build.gensrc}"/>
        </exec>

        <touch file="${build.gensrc}/stamp-xdoclet"/>
      </then>
    </if>
  </target>

  <!-- bootstrap.jar -->
  <property name="src.bootstrap" value="bootstrap"/>
  <property name="build.bootstrap" value="${build.root}/bootstrap"/>

  <target name="compile.bootstrap" depends="prepare">
    <mkdir dir="${build.bootstrap}"/>

    <exec executable="${buildtool.base}/dependset.sh">
      <arg value="${build.bootstrap}"/>
      <arg value="${build.depcache}/bootstrap.patternset"/>
    </exec>

    <depend srcdir="${src.bootstrap}" destdir="${build.bootstrap}"
            cache="${build.depcache}/bootstrap" closure="yes">
      <patternset includesfile="${build.depcache}/bootstrap.patternset"/>
    </depend>

    <javac destdir="${build.bootstrap}"
           optimize="false"
           deprecation="on"
           source="1.5"
           target="1.5"
           includeAntRuntime="false">

      <classpath refid="mvvm.thirdparty.classpath"/>

      <src path="${src.bootstrap}"/>

      <include name="**/*java"/>
    </javac>
  </target>

  <target name="jar.bootstrap" depends="compile.bootstrap">
    <jar destfile="${build.jar}/bootstrap.jar" index="yes">
      <fileset dir="${build.bootstrap}"/>
    </jar>
  </target>

  <target name="install.bootstrap" depends="jar.bootstrap">
    <copy file="${build.jar}/bootstrap.jar" todir="${dist.mvvm.lib}"/>
  </target>

  <!-- mvvm-client.jar -->
  <property name="build.mvvm-client" value="${build.root}/mvvm-client"/>

  <target name="compile.mvvm-client" depends="jar.bootstrap">
    <mkdir dir="${build.mvvm-client}"/>

    <exec executable="${buildtool.base}/dependset.sh">
      <arg value="${build.mvvm-client}"/>
      <arg value="${build.depcache}/mvvm-client.patternset"/>
    </exec>

    <depend srcdir="${src.main}" destdir="${build.mvvm-client}"
            cache="${build.depcache}/mvvm-client" closure="yes">
      <patternset includesfile="${build.depcache}/mvvm-client.patternset"/>
    </depend>

    <javac destdir="${build.mvvm-client}"
           debug="on"
           optimize="false"
           deprecation="on"
           source="1.5"
           target="1.5"
           includeAntRuntime="false">

      <classpath refid="jnetcap.classpath"/>
      <classpath refid="jvector.classpath"/>
      <classpath refid="mvvm.thirdparty.classpath"/>
      <classpath path="${build.jar}/bootstrap.jar"/>

      <src path="${src.main}"/>
      <src path="${build.gensrc}"/>

      <include name="com/metavize/mvvm/*.java"/>
      <include name="com/metavize/mvvm/argon/SessionDesc.java"/>
      <include name="com/metavize/mvvm/argon/IPSessionDesc.java"/>
      <include name="com/metavize/mvvm/argon/SessionEndpoints.java"/>
      <include name="com/metavize/mvvm/argon/ArgonException.java"/>
      <include name="com/metavize/mvvm/shield/ShieldNodeSettings.java"/>
      <include name="com/metavize/mvvm/client/*.java"/>
      <include name="com/metavize/mvvm/engine/HttpInvocation.java"/>
      <include name="com/metavize/mvvm/engine/HttpInvokerStub.java"/>
      <include name="com/metavize/mvvm/engine/ProxyInputStream.java"/>
      <include name="com/metavize/mvvm/engine/SocketInvokerStub.java"/>
      <include name="com/metavize/mvvm/engine/Version.java"/>
      <include name="com/metavize/mvvm/logging/LogEvent.java"/>
      <include name="com/metavize/mvvm/logging/LoggingManager.java"/>
      <include name="com/metavize/mvvm/policy/*.java"/>
      <include name="com/metavize/mvvm/security/*.java"/>
      <include name="com/metavize/mvvm/tapi/*Desc.java"/>
      <include name="com/metavize/mvvm/tapi/SessionStats.java"/>
      <include name="com/metavize/mvvm/tapi/client/*.java"/>
      <include name="com/metavize/mvvm/tapi/Protocol.java"/>
      <include name="com/metavize/mvvm/tran/**/*.java"/>
      <exclude name="com/metavize/mvvm/tran/MutateTStats.java"/>
      <include name="com/metavize/mvvm/util/PortServiceNames.java"/>
      <include name="com/metavize/mvvm/util/SessionUtil.java"/>
    </javac>
  </target>

  <target name="jar.mvvm-client" depends="compile.mvvm-client">
    <jar destfile="${build.jar}/mvvm-client.jar" index="yes">
      <fileset dir="${build.mvvm-client}">
        <include name="com/metavize/mvvm/*.class"/>
        <include name="com/metavize/mvvm/argon/SessionDesc.class"/>
        <include name="com/metavize/mvvm/argon/IPSessionDesc.class"/>
        <include name="com/metavize/mvvm/argon/SessionEndpoints*.class"/>
        <include name="com/metavize/mvvm/argon/ArgonException.class"/>
        <include name="com/metavize/mvvm/shield/ShieldNodeSettings.class"/>
        <include name="com/metavize/mvvm/client/*.class"/>
        <include name="com/metavize/mvvm/engine/HttpInvocation*.class"/>
        <include name="com/metavize/mvvm/engine/HttpInvokerStub*.class"/>
        <include name="com/metavize/mvvm/engine/ProxyInputStream*.class"/>
        <include name="com/metavize/mvvm/engine/SocketInvokerStub*.class"/>
        <include name="com/metavize/mvvm/engine/Version*.class"/>
        <include name="com/metavize/mvvm/logging/LogEvent*.class"/>
        <include name="com/metavize/mvvm/logging/LoggingManager*.class"/>
        <include name="com/metavize/mvvm/policy/*.class"/>
        <include name="com/metavize/mvvm/security/*.class"/>
        <include name="com/metavize/mvvm/tapi/*Desc*.class"/>
        <include name="com/metavize/mvvm/tapi/SessionStats*.class"/>
        <include name="com/metavize/mvvm/tapi/client/*.class"/>
        <include name="com/metavize/mvvm/tapi/Protocol*.class"/>
        <include name="com/metavize/mvvm/tran/**/*.class"/>
        <exclude name="com/metavize/mvvm/tran/MutateTStats*.class"/>
        <include name="com/metavize/mvvm/util/PortServiceNames*.class"/>
        <include name="com/metavize/mvvm/util/SessionUtil*.class"/>
      </fileset>
    </jar>
  </target>

  <target name="install.mvvm-client" depends="jar.mvvm-client">
    <copy file="${build.jar}/mvvm-client.jar" todir="${dist.mvvm.lib}"/>
  </target>

  <!-- mvvm.jar -->

  <property name="build.mvvm" value="${build.root}/mvvm"/>

  <target name="compile.mvvm" depends="jar.bootstrap">
    <mkdir dir="${build.mvvm}"/>

    <exec executable="${buildtool.base}/dependset.sh">
      <arg value="${build.mvvm}"/>
      <arg value="${build.depcache}/mvvm.patternset"/>
    </exec>

    <depend srcdir="${src.main}" destdir="${build.mvvm}"
            cache="${build.depcache}/mvvm" closure="yes"
            classpath="${build.bootstrap}">
      <patternset includesfile="${build.depcache}/mvvm.patternset"/>
    </depend>

    <javac destdir="${build.mvvm}"
           debug="on"
           optimize="false"
           deprecation="on"
           source="1.5"
           target="1.5"
           includeAntRuntime="false">

      <classpath refid="jnetcap.classpath"/>
      <classpath refid="jvector.classpath"/>
      <classpath refid="jfreechart.classpath"/>
      <classpath refid="mvvm.thirdparty.classpath"/>
      <classpath path="${build.jar}/bootstrap.jar"/>

      <src path="${src.main}"/>
      <src path="${build.gensrc}"/>

      <include name="com/metavize/mvvm/MvvmContext.java"/>
      <include name="com/metavize/mvvm/argon/*"/>
      <include name="com/metavize/mvvm/shield/*"/>
      <include name="com/metavize/mvvm/engine/*"/>
      <include name="com/metavize/mvvm/logging/**"/>
      <include name="com/metavize/mvvm/policy/**"/>
      <include name="com/metavize/mvvm/security/**"/>
      <include name="com/metavize/mvvm/tapi/**"/>
      <include name="com/metavize/mvvm/tran/**"/>
      <include name="com/metavize/mvvm/type/**"/>
      <include name="com/metavize/tran/token/**"/>
      <include name="com/metavize/tran/util/**"/>
      <include name="com/metavize/tran/mime/**"/>
      <include name="com/metavize/tran/sasl/**"/>
      <include name="com/metavize/mvvm/reporting/**"/>
      <include name="com/metavize/mvvm/reporting/Util.java"/>
    </javac>
  </target>

  <target name="jar.mvvm" depends="compile.mvvm, gensrc.xdoclet">
    <jar destfile="${build.jar}/mvvm.jar" index="yes">
      <fileset dir="${build.gensrc}">
        <include name="**/*.hbm.xml"/>
      </fileset>
      <fileset dir="${build.mvvm}"/>

      <!-- XXX dirty hack for reporting icons -->
      <fileset dir="../gui/main">
        <include name="com/metavize/gui/icons/LogoNoText96x96.gif"/>
        <include name="com/metavize/gui/icons/LogoNoText64x64.gif"/>
      </fileset>

      <!-- XXXX really dirty hack for store icons -->
      <fileset dir="../gui/main">
        <include name="**/IconOrg*png"/>
        <include name="**/IconDesc*png"/>
      </fileset>

      <fileset dir="../tran/test/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/airgap/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/email/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/fprot/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/httpblocker/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/protofilter/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/reporting/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/sophos/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/spyware/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/virus/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/hauri/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/kav/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/clam/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/nat/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/firewall/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/spamassassin/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/ids/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/clamphish/main">
        <include name="**/*png"/>
      </fileset>
      <fileset dir="../tran/kav/main">
        <include name="**/*png"/>
      </fileset>



    </jar>
  </target>

  <target name="install.mvvm" depends="jar.mvvm">
    <copy file="${build.jar}/mvvm.jar" todir="${dist.mvvm.lib}"/>
  </target>

  <property name="build.mvvm" value="${build.root}/mvvm"/>

  <!-- servlets.war" -->

  <property name="build.servlets" value="${build.root}/servlets"/>

  <target name="compile.servlets" depends="jar.bootstrap, jar.mvvm-client">
    <mkdir dir="${build.servlets}"/>

    <exec executable="${buildtool.base}/dependset.sh">
      <arg value="${build.servlets}"/>
      <arg value="${build.depcache}/servlets.patternset"/>
    </exec>

    <depend srcdir="${src.main}"
            destdir="${build.servlets}"
            cache="${build.depcache}/servlets" closure="yes">
      <patternset includesfile="${build.depcache}/servlets.patternset"/>
    </depend>

    <javac destdir="${build.servlets}"
           debug="on"
           optimize="false"
           deprecation="on"
           source="1.5"
           target="1.5"
           includeAntRuntime="false">

      <classpath refid="mvvm.thirdparty.classpath"/>
      <classpath path="${build.jar}/bootstrap.jar"/>
      <classpath path="${build.jar}/mvvm-client.jar"/>

      <src path="${src.main}"/>
      <src path="${build.gensrc}"/>

      <include name="com/metavize/mvvm/servlet/invoker/HttpInvokerServlet.java"/>
      <include name="com/metavize/jsp/**/*.java"/>
    </javac>
  </target>

  <target name="jar.servlets" depends="compile.servlets">
    <jar destfile="${build.jar}/servlets.jar" index="yes">
      <fileset dir="${build.servlets}"/>
      <fileset dir="${build.gensrc}">
        <include name="**/*.hbm.xml"/>
      </fileset>
    </jar>
  </target>

  <target name="install.servlets" depends="jar.servlets">
    <copy file="${build.jar}/servlets.jar"
          todir="${dist.mvvm.web}/http-invoker/WEB-INF/lib"/>
    <copy todir="${dist.mvvm.web}/session-dumper/WEB-INF/lib">
      <fileset dir="${build.jar}">
        <include name="mvvm-client.jar"/>
        <include name="servlets.jar"/>
      </fileset>
    </copy>
    <copy todir="${dist.mvvm.web}/reports/WEB-INF/lib">
      <fileset dir="${build.jar}">
        <include name="mvvm-client.jar"/>
        <include name="servlets.jar"/>
      </fileset>
    </copy>
  </target>

  <!-- thirdparty -->

  <target name="install.thirdparty" depends="install.hier">
    <mkdir dir="${dist.thirdparty.lib}"/>

    <!-- XXX move to own package(s) -->
    <copy todir="${dist.thirdparty.lib}" flatten="yes">
      <fileset refid="activation.jarset"/>
      <fileset refid="c3p0.jarset"/>
      <fileset refid="concurrent.jarset"/>
      <fileset refid="hibernate.jarset"/>
      <fileset refid="itext.jarset"/>
      <fileset refid="jasperreports.jarset"/>
      <fileset refid="javamail.jarset"/>
      <fileset refid="jfreechart.jarset"/>
      <fileset refid="junit.jarset"/>
      <fileset refid="log4j.jarset"/>
      <fileset refid="postgresql.jarset"/>
      <fileset refid="tomcat.jarset"/>
      <fileset refid="trove.jarset"/>
      <fileset refid="yjp.jarset"/>
    </copy>

    <!-- java endorsed directory -->

    <mkdir dir="${dist.endorsed.lib}"/>

    <copy todir="${dist.endorsed.lib}">
      <fileset dir="${HIBERNATE_HOME}/lib">
        <include name="xerces-*.jar"/>
      </fileset>
    </copy>

  </target>

  <target name="install.reports" depends="install.hier">
    <!-- XXX originally images were here, but they are now located in hier
         <copy todir="${dist.mvvm.reports}">
         </copy>
    -->
  </target>

  <!-- hier targets -->

  <target name="install.hier">
    <mkdir dir="${dist.log}"/>
    <mkdir dir="${dist.var.run}"/>
    <mkdir dir="${dist.mvvm.data}"/>
    <mkdir dir="${dist.mvvm.tmp}"/>
    <mkdir dir="${dist.mvvm.conf}/etc"/>
    <mkdir dir="${dist.mvvm.conf}/etc/network"/>

    <copy todir="${build.dist}" filtering="true">
      <fileset dir="${src.hier}"/>
    </copy>

    <copy tofile="${build.dist}/tmp/pkg-list" filtering="true">
      <fileset file="../debian/control"/>
    </copy>


    <exec executable="sh">
      <arg line='-c "if ! [ -a ${dist.mvvm.log} ] ; then ln -fs ${build.prefix}/${suffix.log}/ ${dist.mvvm.log} ; fi "'/>
    </exec>

    <chmod perm="ugo+rx">
      <fileset dir="${build.dist}/usr/bin"/>
      <fileset dir="${build.dist}/etc/init.d"/>
      <fileset dir="${build.dist}/etc/cron.daily"/>
      <fileset file="${build.dist}/usr/share/metavize/mvvm_restart.sh"/>
      <fileset file="${build.dist}/usr/share/metavize/ssh_enable.sh"/>
      <fileset file="${build.dist}/usr/share/metavize/ssh_disable.sh"/>
    </chmod>
  </target>


  <!-- Javadoc target -->
  <target name="jdoc" depends="pkg.jar">
    <!-- "func.jdoc" defined in "common-targets.xml" -->
    <antcall target="func.jdoc">
      <param name="jdoc.src" value="main"/>
    </antcall>
    <antcall target="func.jdoc">
      <param name="jdoc.src" value="bootstrap"/>
      <param name="jdoc.prjName" value="${ant.project.name}_bootstrap"/>
    </antcall>

  </target>

  <!--
      Copy source files to ${jdoc.bigtree.src}
      for inclusion in big JavaDoc generation
  -->
  <target name="bigjdoc">
    <copydir src="main"
             dest="${jdoc.bigtree.src}"
             includes="**/*.java"
             excludes="**/Test.java"
             forceoverwrite="true"/>
    <copydir src="bootstrap"
             dest="${jdoc.bigtree.src}"
             includes="**/*.java"
             excludes="**/Test.java"
             forceoverwrite="true"/>
  </target>

</project>
