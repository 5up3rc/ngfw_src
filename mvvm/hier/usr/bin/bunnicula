#!/bin/sh

PATH=/sbin:/bin:/usr/sbin:/usr/bin
JAVA_HOME=${JAVA_HOME:-/opt/java}

## Configure IPV4 parameters

procset() {
    if [ -f $1 ] ; then
        echo $2 > $1 ;
        if [ $? != 0 ] ; then
            echo "WARNING: Failed to set proc setting \"$1\""  >&2
            if [ "$3" != "" ] ; then
                echo "ERROR: Failed to set required proc setting \"$1\""  >&2
                exit 1
            fi
        fi
    else
        echo "WARNING: Missing proc setting \"$1\"" >&2
    fi
}

# check ip_queue
if [ "`grep Peer /proc/net/ip_queue  | awk '{ print $4 }'`" != "0" ] ; then
    echo "ERROR: ip_queue allocated, exiting" >&2
    exit 1
fi

# Not Optional
procset /proc/sys/net/ipv4/ip_forward 1 1
procset /proc/sys/net/ipv4/ip_nonlocal_bind 1 1
procset /proc/sys/net/ipv4/icmp_frag_accept 1 1
procset /proc/sys/net/ipv4/ip_local_port_range "3000   9000" 1
# Optional
procset /proc/sys/net/ipv4/tcp_synack_retries 0
procset /proc/sys/net/ipv4/tcp_syncookies 1
procset /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_time_wait 30
procset /proc/sys/net/ipv4/ip_queue_maxlen 16384

# remove tomcat persisted sessions
find @PREFIX@ -name SESSIONS.ser -exec rm -f '{}' ';'

# make self-signed certificate
# XXX this certificate could perhaps be more filled out with info
# gathered during the install
if [ ! -e @MVVM_CONF@/keystore ]; then
    $JAVA_HOME/bin/keytool -genkey -keyalg RSA -keystore @MVVM_CONF@/keystore \
        -alias tomcat -keypass changeit -storepass changeit \
        -dname "cn=$(hostname), ou=devices"
fi

# add user and mvvm database just in case
su postgres -c "createuser --createdb --no-adduser metavize" 2>/dev/null
createdb -O metavize -U metavize mvvm 2>/dev/null

# This parameter comes from the MVVM_PARAMS_FILE
if [ -f /proc/sys/net/ipv4/tcp_window_scaling ] ; then
    ## If undefined or non-true, disable window scaling
    val=0

    if [ "x$TCP_WINDOW_SCALING_EN" = "xtrue" ]; then
        val=1
    fi

    echo $val > /proc/sys/net/ipv4/tcp_window_scaling ;
fi


CLASSPATH="@MVVM_HOME@/conf:@MVVM_HOME@/lib/bootstrap.jar"

#
# build environment tweeks
#
if [ "x" != "x@PREFIX@" ] ; then
    PATH=@PREFIX@/usr/bin:$PATH
fi

for f in @THIRDPARTY_LIB@/*jar ; do
    CLASSPATH="$CLASSPATH:$f"
done

export PATH LD_LIBRARY_PATH CLASSPATH JAVA_HOME

#
# profiling tweeks
#
if [ "x$PROFILE_MVVM_YJP" = "xyes" ] ; then
    echo "YJP profiling support enabled (concurrent garbage collection disabled)"
    YJP_HOME=/opt/yjp
    LD_LIBRARY_PATH=$YJP_HOME/bin/linux-x86-32:$LD_LIBRARY_PATH
    JAVA_OPTS="-agentlib:yjpagent $JAVA_OPTS"
fi

fdlimit=1
for i in `seq 21` ; do
    ulimit -n $fdlimit;
    fdlimit=$(($fdlimit*2));
done

exec $JAVA_HOME/bin/java \
    -Djava.endorsed.dirs=@ENDORSED_LIB@ \
    -Djava.library.path=@ALPINE_LIB@ \
    -Dbunnicula.home=@MVVM_HOME@ \
    -Dargon.shield.cfg_file=@MVVM_HOME@/conf/shield.cfg \
    -Djdbc.drivers=org.postgresql.Driver \
    ${JAVA_OPTS} $* \
    com.metavize.mvvm.engine.Main
