#!/bin/sh

JAVA_HOME=${JAVA_HOME:-/opt/java}

# Need bootstrap for logging stuff...  XXX
CLASSPATH="@MVVM_HOME@/lib/bootstrap.jar:@MVVM_HOME@/lib/mvvm-reports.jar"
for f in @THIRDPARTY_REPORTS_LIB@/*jar ; do
    CLASSPATH="$CLASSPATH:$f"
done

# Use 16Meg of memory for sorting, 32Meg for vacuuming, assume 300Meg of linux caching
# (tilts optimizer towards use of indices)
PGOPTIONS="-c sort_mem=16384 -c vacuum_mem=32768 -c effective_cache_size=30000"

export JAVA_HOME CLASSPATH PGOPTIONS

REPORT_DIR=@MVVM_WEB@/reports

# roll up logs, deleting any more than 31 days old (and thus unreportable  on)
@USR_BIN@/rollup-logs 31

echo "VACUUM ANALYZE;" | psql -U metavize mvvm

rm -rf $REPORT_DIR/current
# Just in case left over (we use a jsp now)
rm -f $REPORT_DIR/index.html

is_reporting_enabled=$(@USR_BIN@/mcli isReportingEnabled)

# Only generate today's reports if the reporting transform is running
if [ $is_reporting_enabled == 'true' ]; then
    mars=$(@USR_BIN@/mcli instances | grep running | awk '{print $2}' | uniq | sed 's|^\(.*\)$|@MVVM_TOOLBOX@/\1.mar|')

    # Build the DHCP Merged Address Map (needed for running start-reports scripts)
    $JAVA_HOME/bin/java -Xmx512m \
        -Dlog4j.configuration=file:@MVVM_HOME@/conf/log4j-reporter.xml \
        com.metavize.mvvm.reporting.Reporter -o $REPORT_DIR -d 32 -m "$@"

    # Build pre-joined reports tables
    for c in @MVVM_SCHEMA@/*/start-reports.sql; do
        psql -U metavize -f $c mvvm
    done

    echo "VACUUM ANALYZE;" | psql -U metavize mvvm

    $JAVA_HOME/bin/java -Xmx512m \
        -Dlog4j.configuration=file:@MVVM_HOME@/conf/log4j-reporter.xml \
        com.metavize.mvvm.reporting.Reporter -o $REPORT_DIR -d 32 "$@" $mars
    # note that Reporter has just created settings.env

    if [ -h $REPORT_DIR/current ]; then
        source $REPORT_DIR/current/settings.env

        cp -pr $REPORT_DIR/css $REPORT_DIR/current
        cp -pr $REPORT_DIR/images $REPORT_DIR/current

# generate the web viewable page
        if [ $MV_EG_DAILY_REPORT == 'y' ]; then
            @USR_BIN@/index-reports index.html daily false
        fi
        if [ $MV_EG_WEEKLY_REPORT == 'y' ]; then
            @USR_BIN@/index-reports index_online_weekly.html weekly false
        fi
        if [ $MV_EG_MONTHLY_REPORT == 'y' ]; then
            @USR_BIN@/index-reports index_online_monthly.html monthly false
        fi

# convert all non-index html pages to have MV look-n-feel
# (convert-reports doesn't look for daily, weekly, or monthly html pages
#  so if any set is missing, it is okay)
        @USR_BIN@/convert-reports

# generate the emailable page
        if [ $MV_EG_DAILY_REPORT == 'y' ]; then
            @USR_BIN@/index-reports index_email_daily.html daily true
        fi
        if [ $MV_EG_WEEKLY_REPORT == 'y' ]; then
            @USR_BIN@/index-reports index_email_weekly.html weekly true
        fi
        if [ $MV_EG_MONTHLY_REPORT == 'y' ]; then
            @USR_BIN@/index-reports index_email_monthly.html monthly true
        fi

# email the reports to all recipients
        cd $REPORT_DIR/current
        if [ $MV_EG_DAILY_REPORT == 'y' ]; then
            cat @PREFIX@/tmp/mail_reports_arguments_daily.txt | xargs @USR_BIN@/mail-reports
        fi
        if [ $MV_EG_WEEKLY_REPORT == 'y' ]; then
            cat @PREFIX@/tmp/mail_reports_arguments_weekly.txt | xargs @USR_BIN@/mail-reports
        fi
        if [ $MV_EG_MONTHLY_REPORT == 'y' ]; then
            cat @PREFIX@/tmp/mail_reports_arguments_monthly.txt | xargs @USR_BIN@/mail-reports
        fi

# ensure that a base index file is present
        cd $REPORT_DIR/current
        if [ $MV_EG_DAILY_REPORT == 'n' ]; then
            rm -f index.html
            if [ $MV_EG_WEEKLY_REPORT == 'y' ]; then
                ln -s index_online_weekly.html index.html
            elif [ $MV_EG_MONTHLY_REPORT == 'y' ]; then
                ln -s index_online_monthly.html index.html
            fi
        fi
    fi

    for c in @MVVM_SCHEMA@/*/finish-reports.sql; do
        psql -U metavize -f $c mvvm
    done

    echo "VACUUM ANALYZE;" | psql -U metavize mvvm
fi
