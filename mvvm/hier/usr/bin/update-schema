#!/bin/sh
exec >>@MVVM_LOG@/schema.log 2>&1

PSQL="psql -U metavize --tuples-only mvvm"

if [ $# = 0 ]; then
    echo "usage: $0 [ mvvm | transform ]"
    exit 1
fi

cat <<EOF | $PSQL
CREATE SCHEMA settings;

-- before version 2.5, schema_ver was in public, these two commands may
-- safely be deleted when no such installations exist.
CREATE TABLE settings.schema_ver (component, version)
    AS SELECT * FROM public.schema_ver;
DROP TABLE public.schema_ver;

CREATE TABLE settings.schema_ver (component varchar(64), version int4);
ALTER TABLE settings.schema_ver
    ADD CONSTRAINT schema_ver_pkey PRIMARY KEY (component);


-- hack for version 2.5
-- convert clam, fprot, hauri, and sophos to use virus-base schema
INSERT INTO schema_ver (SELECT 'virus-base' AS component, version FROM schema_ver WHERE component = 'clam-transform' OR component = 'fprot-transform' OR component = 'hauri-transform' OR component = 'sophos-transform' ORDER BY version LIMIT 1);
DELETE FROM schema_ver WHERE component = 'clam-transform' OR component = 'fprot-transform' OR component = 'hauri-transform' OR component = 'sophos-transform';

-- hack for version 2.5
-- convert spamassassin, clamphish to use spam-base schema
INSERT INTO schema_ver (SELECT 'spam-base' AS component, version FROM schema_ver WHERE component = 'spamassassin-transform' OR component = 'clamphish-transform' ORDER BY version LIMIT 1);
DELETE FROM schema_ver WHERE component = 'spamassassin-transform' OR component = 'clamphish-transform';

EOF

component=$1

schema_dir=@MVVM_SCHEMA@/$component

ver=$(echo "SELECT version FROM schema_ver WHERE component = '$1'" | $PSQL)
latest_ver=$(ls $schema_dir/schema-*.sql | sed 's/^.*schema-\([0-9]\+\).sql/\1/' | sort -n -r | head -n1)
echo "Updating schema: $component on $(date)"
echo "Current schema version: $ver"
echo "Latest schema version: $latest_ver"

if [ "x$latest_ver" = "x" ]; then
    echo "No schema"
elif [ "x$ver" = "x" ]; then
    echo "Initializing schema"
    psql -e -f $schema_dir/schema-$latest_ver.sql -U metavize mvvm

cat <<EOF | $PSQL
DELETE FROM schema_ver WHERE component = '$component';
INSERT INTO schema_ver VALUES ('$component', $latest_ver);
EOF
elif [ "$ver" -gt "$latest_ver" ]; then
    echo "Installed version is greater than latest version."
else
    if [ "$ver" -ne "$latest_ver" ]; then
        echo "Updating Schema..."
        for v in $(seq $(expr $ver + 1) $latest_ver); do
            echo "Updating to $v"
            psql -e -f $schema_dir/convert-$v.sql -U metavize mvvm
        done

        cat <<EOF | $PSQL
UPDATE schema_ver SET version = '$latest_ver' WHERE component = '$component';
EOF
    fi

    echo "running schema-$latest_ver just in case"
    psql -e -f $schema_dir/schema-$latest_ver.sql -U metavize mvvm </dev/null
fi
