#!/bin/sh

PSQL="psql -U metavize --tuples-only mvvm"
LOG=@MVVM_LOG@/schema.log

if [ $# = 0 ]; then
    echo "usage: $0 [ mvvm | transform ]"
    exit 1
fi

component=$1

schema_dir=@MVVM_SCHEMA@/$component

ver=$(echo "SELECT version FROM schema_ver WHERE component = '$1'" | $PSQL)
latest_ver=$(ls $schema_dir/schema-*.sql | sed 's/^.*schema-\([0-9]\+\).sql/\1/' | sort -n -r | head -n1)
echo "Current schema version: $ver"
echo "Latest schema version: $latest_ver"

if [ "x$ver" == "x" ]; then
    echo "Initializing schema"
    psql -e -f $schema_dir/schema-$latest_ver.sql -U metavize mvvm >> $LOG

cat <<EOF | $PSQL
CREATE TABLE schema_ver (component varchar(64), version int4);
DELETE FROM schema_ver WHERE component = '$component';
INSERT INTO schema_ver VALUES ('$component', $latest_ver);
EOF

else
    if [ "$ver" -ne "$latest_ver" ]; then
        echo "Updating Schema..."
        let "v = v + 1"
        for v in $(seq $ver $latest_ver); do
            echo "Updating to $v"
            psql -e -f $schema_dir/convert-$v.sql -U metavize mvvm >> $LOG
        done
cat <<EOF | $PSQL
UPDATE schema_ver SET version = '$latest_ver' WHERE component = '$component';
EOF
    else
        echo "Current schema up to date"
    fi
fi
