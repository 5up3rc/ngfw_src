# MVVM server settings -*-sh-*-

## Simply function for taking a string, trim surround space, and the convert
## space separators to the token string. eg join_string " a b c " ";" -> "a;b;c"
join_string() {
    echo $1 | sed -e 's/^ *//g' -e 's/ *$//g' -e "s/ \\+/$2/g"
}

DEFAULT_DMZ="eth2"

# Use the following to configure your local installation
MVVM_LOGDIR=@PREFIX@/var/log/mvvm
MVVM_RUNDIR=@PREFIX@/var/run
MVVM_RESTART_PIDFILE=$MVVM_RUNDIR/mvvm-restart.pid
MVVM_REBOOT_PIDFILE=$MVVM_RUNDIR/mvvm-reboot.pid
MVVM_CONSOLE_LOG=$MVVM_LOGDIR/console.log
MVVM_WRAPPER_LOG=$MVVM_LOGDIR/wrapper.log
MVVM_GC_LOG=$MVVM_LOGDIR/gc.log
MVVM_CMD=@PREFIX@/usr/bin/mvvm.sh
MVVM_USER=root
## Defaults to 10000 in the code, set here if you want something else
MVVM_SESSION_LIMIT=""

MVVM_ARGS=""

## For testing, setup the interfaces here
#MVVM_INSIDE_INTF=""
#MVVM_OUTSIDE_INTF=""
#MVVM_DMZ_INTF=""

## Set inside and outside interface to a default if it is not set
MVVM_INSIDE_INTF=${MVVM_INSIDE_INTF:-"eth1"}
MVVM_OUTSIDE_INTF=${MVVM_OUTSIDE_INTF:-"eth0"}

if [ "x${USER}" = "xroot" ]; then
        MVVM_NICENESS=-15
else
        MVVM_NICENESS=0
fi

MVVM_ARGS="${MVVM_ARGS} -Dargon.inside=${MVVM_INSIDE_INTF} -Dargon.outside=${MVVM_OUTSIDE_INTF}"

## Check for a DMZ Interface if the default is not set, (just check for eth2)
if [ -z "${MVVM_DMZ_INTF}" ] && [ -d "/sys/class/net/${DEFAULT_DMZ}" ]; then
    MVVM_DMZ_INTF=${DEFAULT_DMZ}
fi

if [ -n "${MVVM_DMZ_INTF}" ]; then
    MVVM_ARGS="${MVVM_ARGS} -Dargon.dmz=${MVVM_DMZ_INTF}"
fi

## Append the session limit if it is set
if [ -n "${MVVM_SESSION_LIMIT}" ]; then
    MVVM_ARGS="${MVVM_ARGS} -Dargon.sessionlimit=${MVVM_SESSION_LIMIT}"
fi

#
# Profiling
#
PROFILE_MVVM_YJP=${PROFILE_MVVM_YJP=$:-no}
export PROFILE_MVVM_YJP

# Use the Throughput or Concurrent-Low-Pause garbage collector?
# We normally want to use the Concurrent collector as it gives the lowest possible pause
# times.
USE_THROUGHPUT_COLLECTOR=no
if [ "x$PROFILE_MVVM_YJP" = "xyes" ] ; then
    USE_THROUGHPUT_COLLECTOR=yes
fi

#
# JAVA options
#

# NOTE: this setting is required
# JAVA_HOME=/usr/lib/j2se/1.4/jre
JAVA_HOME=${JAVA_HOME:-@DEFAULT_JAVA_HOME@}

if [ "x$USE_THROUGHPUT_COLLECTOR" = "xyes" ] ; then
# Goals: 20ms maximum pause time, 95% throughput, finally minimum footprint
    JAVA_OPTS_SUN="-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseParallelGC -XX:MaxGCPauseMillis=20 -XX:GCTimeRatio=19"
else
    JAVA_OPTS_SUN="-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode -XX:+CMSIncrementalPacing -XX:CMSIncrementalDutyCycleMin=0 -XX:CMSIncrementalDutyCycle=10 -XX:+UseParNewGC -XX:NewRatio=4"
fi
JAVA_OPTS_BEA="-Xgcpause -Xgcprio:pausetime"
# Java Options:
#  Minimum at 128m so we don't blow out smaller (512MB) machines
#  Maximum at 320m so we leave a lot of space for stacks but still have enough for 10,000 sessions
#  Stack size 96k which is small enough but still works
JAVA_OPTS_COMMON="-ea -verbose:gc -Xloggc:$MVVM_GC_LOG -Xms128m -Xmx320m -Xss96k -server"

if [ -f $JAVA_HOME/bin/console ] ; then
    JAVA_OPTS="$JAVA_OPTS_COMMON $JAVA_OPTS_BEA" #   BEA
else
    JAVA_OPTS="$JAVA_OPTS_COMMON $JAVA_OPTS_SUN" #   SUN
fi

export JAVA_OPTS
