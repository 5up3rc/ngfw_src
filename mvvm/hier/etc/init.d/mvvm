#! /bin/sh
# $Id: mvvm,v 1.10 2005/03/22 01:51:56 cng Exp $

if [ -f @PREFIX@/etc/default/mvvm ] ; then
    . @PREFIX@/etc/default/mvvm
fi

MVVM_LOGDIR=${MVVM_LOGDIR:-@PREFIX@/var/log/mvvm}
MVVM_RUNDIR=${MVVM_RUNDIR:-@PREFIX@/var/run}
MVVM_NICENESS=${MVVM_NICENESS:-0}
MVVM_CONSOLE_LOG=${MVVM_CONSOLE_LOG:-$MVVM_LOGDIR/console.log}
MVVM_WRAPPER_LOG=${MVVM_WRAPPER_LOG:-$MVVM_LOGDIR/wrapper.log}
MVVM_CMD=${MVVM_CMD:-@PREFIX@/usr/bin/mvvm.sh}
MVVM_USER=${MVVM_USER:-$USER}
MVVM_PID="mvvm.pid"
MVVM_CHUSER=" --chuid $MVVM_USER:$MVVM_USER "
MVVM_TIMEOUT=600

# if in the build
if [ "x" != "x@PREFIX@" ] ; then
    MVVM_CHUSER=""
    MVVM_NICENESS="0"
    if [ "$USER" != "root" ] ; then
        echo "sudo $0 $*"
        exec sudo $0 $*
    fi
fi


case "$1" in
    start)
        echo -n "Starting MVVM: "

        # This is a hack to not start during install phase
        if [ ! -z "`cat /proc/cmdline | grep mv_install`" ] ; then
            echo "Skipping."
            exit
        fi

        if [ -f ${MVVM_RUNDIR}/${MVVM_PID} ] ; then
            pid=`cat ${MVVM_RUNDIR}/${MVVM_PID}`
            if [ -z "`ps ax | awk '{print $1}' | grep \"^$pid$\"`" ] ; then
                echo -n "Removing Stale PIDfile  (file:`cat ${MVVM_RUNDIR}/${MVVM_PID}` pid:$pid) "
                rm -f ${MVVM_RUNDIR}/${MVVM_PID}
            else
                echo "Already started."
                exit
            fi
        fi

        echo -n "[."

        start-stop-daemon --start \
            --background --make-pidfile -q \
            --pidfile ${MVVM_RUNDIR}/${MVVM_PID} \
            --chdir ${MVVM_RUNDIR} \
            --nicelevel ${MVVM_NICENESS} \
            $MVVM_CHUSER \
            --exec ${MVVM_CMD} -- ${MVVM_ARGS}

        if [ $? != "0" ] ; then
            exit
        fi
        echo -n "." ; sleep 1 ; echo -n "." ; sleep 1 # time for console.log to be rm'd

        pid=$(cat ${MVVM_RUNDIR}/${MVVM_PID})

        # Wait for completion
        for i in `seq 1 $MVVM_TIMEOUT` ; do
            ps -p $pid >/dev/null
            if [ $? -ne 0 ]; then
                exit
            fi

            EXPC="`cat $MVVM_CONSOLE_LOG 2>/dev/null | grep -i exception `"
            FINI="`cat $MVVM_CONSOLE_LOG 2>/dev/null | grep -i 'vegetables' `"
            sleep 1
            echo -n "."

            if [ "x" != "x$EXPC" ] ; then
                if [ ! -z "`echo $EXPC | grep -i \"address already in use\"`" ] ; then
                    echo -e "x]\nAddress already in use. Will attempt to rebind for five minutes."
                else
                    echo -e "x]\nException in $MVVM_CONSOLE_LOG"
                    if [ "x" != "x@PREFIX@" ] ; then
                        $0 stop
                        exit
                    fi
                    exit
                fi
            fi

            if [ "x" != "x$FINI" ] ; then
                break
            fi
        done

        # Wait for completion, ignore exceptions because they are transform exceptions
        for i in `seq 1 $MVVM_TIMEOUT` ; do
            FINI="`cat $MVVM_CONSOLE_LOG 2>/dev/null | grep -i 'postInit complete' `"
            sleep 1
            echo -n "."
            if [ "x" != "x$FINI" ] ; then
                echo "]"
                exit
            fi
        done

        echo "x]"
        ;;

    stop)
        echo -n "Stopping MVVM: "

        if [ ! -f ${MVVM_RUNDIR}/${MVVM_PID} ] ; then
            echo "Not Running."
            exit
        fi

        echo -n "[."

        # Attempt polite kill first
        start-stop-daemon -s INT --stop \
            -q \
            --pidfile ${MVVM_RUNDIR}/${MVVM_PID}
        code=$?
        if [ $code != "0" ] ; then
            exit
        fi

        rm -f ${MVVM_RUNDIR}/${MVVM_PID}  &> /dev/null

        # Wait for completion
        tick=0
        for i in `seq 1 10` ; do
            FINI="`cat $MVVM_CONSOLE_LOG 2>/dev/null | grep -i 'shutdown complete' `"
            sleep 1
            echo -n "."
            if [ "x" != "x$FINI" ] ; then
                sleep 1 ; echo -n "." ; sleep 1
                echo ".]"
                exit
            fi
            if [ -z "`ps awwx | grep java | grep mvvm | awk '{print $1}'`" ] ; then
                if [ $tick -ge 5 ] ; then
                    break
                else
                    tick=$(($tick+1))
                fi
            fi
        done

        # Attempt more aggressive kill now
        echo -n "ungraceful exit"
        kill -INT `ps awwx | grep java | grep mvvm | awk '{print $1}' | grep -v $$ ` &>/dev/null
        killall -s INT mvvm.sh &>/dev/null
        kill `ps awwx | grep java | grep mvvm | awk '{print $1}' | grep -v $$ ` &>/dev/null
        killall mvvm.sh &>/dev/null

        # Wait for completion
        for i in `seq 1 20` ; do
            FINI="`cat $MVVM_CONSOLE_LOG 2>/dev/null | grep -i 'shutdown complete' `"
            sleep 1
            echo -n "."
            if [ "x" != "x$FINI" ] ; then
                sleep 1 ; echo -n "." ; sleep 1
                echo "]"
                exit
            fi
            if [ -z "`ps awwx | grep java | grep mvvm | awk '{print $1}'`" ] ; then
                if [ $tick -ge 5 ] ; then
                    echo "]"
                    exit
                else
                    tick=$(($tick+1))
                fi
            fi
        done

        echo "x]"
        ;;

    restart|force-reload)
        $0 stop
        sleep 1
        $0 start
        ;;

    *)
        echo "Usage: /etc/init.d/mvvm {start|stop|restart|force-reload}"
        exit
esac

exit 0
