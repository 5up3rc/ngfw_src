#! /bin/bash

exec >> @UVM_LOG@/openvpn.log 2>&1

GLOBALS=@UVM_HOME@/openvpn/globals

## There must be a configuration file 
if [ -r ${GLOBALS} ]; then
    . ${GLOBALS}
else
    echo "[`date`,get-client] Unable to load the openvpn configuration file ${GLOBALS}"
    exit -2
fi

## Number of times to wait for the Open vpn server to start
RETRY_ATTEMPTS=35
TEST_DELAY=1
TEST_FAILED=-5
MISSING_FILE_ERROR=-7
ERROR_INTERNAL=-8
INVALID_FILE_ERROR=-9

serverAddress=${1}
localPath="${1}"

mkdir -p ${PACKAGE_DIR}
mkdir -p ${MISC_DIR}

# If the tun device doesn't exist, then create it
TUN_DEVICE=/dev/net/tun
if [ ! -c ${TUN_DEVICE} ]; then
    mkdir -p /dev/net
    mknod ${TUN_DEVICE} c 10 200
fi

destination=`mktemp || exit ${MISSING_FILE_ERROR}`

logFile=@UVM_LOG@/openvpn.log

copyLocalFile()
{
    if [ ! -f "${localPath}" ]; then
        echo "[`date`,get-client] Unable to find the file: ${localPath}"
        exit ${MISSING_FILE_ERROR}
    fi

    echo "[`date`,get-client] cp '${localPath}' '${destination}'"
    cp "${localPath}" "${destination}"
}

installClient()
{
    local t_output

    t_output=`mktemp -d || exit -3`
    
    echo "[`date`,get-client] unzip '${destination}' -d '${t_output}'"
    unzip ${destination} -d ${t_output} || { ${RM_CMD} -rf ${t_output};  exit ${INVALID_FILE_ERROR} ; }
    
    ## Cleanup the old files
    ## A little risky, but hey
    rm -rf /etc/openvpn
    mkdir -p /etc/openvpn || { ${RM_CMD} -rf ${t_output};  exit ${ERROR_INTERNAL} ; }

    ## Copy in the necessary files
    cp ${t_output}/untangle-vpn/*.conf ${OPENVPN_CONF_DIR}/client.conf \
    || { ${RM_CMD} -rf ${t_output} ; exit ${INVALID_FILE_ERROR} ; }
    
    ## Update the configuration file to log to a normal place
    sed -i -e "\$a log-append ${logFile}" ${OPENVPN_CONF_DIR}/client.conf \
        || { ${RM_CMD} -f ${OPENVPN_CONF_DIR}/client.conf ; ${RM_CMD} -rf ${t_output};  exit ${MISSING_FILE_ERROR} ; }

    cp -r ${t_output}/untangle-vpn/untangle-vpn ${OPENVPN_CONF_DIR}/untangle-vpn \
        || { ${RM_CMD} -f ${OPENVPN_CONF_DIR}/client.conf ; ${RM_CMD} -rf ${t_output};  exit ${MISSING_FILE_ERROR} ; }
    
    ## Cleanup
    ${RM_CMD} -rf ${t_output}
}

testInstall()
{
    local t
    local t_success
    local t_marker

    t_marker="`date`,get-client test-install-marker"
    echo "${t_marker}"
    echo ""
    sleep 1

    /etc/init.d/openvpn start

    for (( t = 0 ; t < ${RETRY_ATTEMPTS} ; t++ )); do
        awk --assign marker=false "/${t_marker}/ { marker = true } ; /Initialization Sequence Completed/ { if ( marker == true ) exit 1 }" "${logFile}" || {
            t_success="true"
            break
        }
        
        sleep ${TEST_DELAY}
    done
    
    ## Stop the server
    bash ${SCRIPT_DIR}/stop-openvpn

    if [ -z "${t_success}" ]; then
        echo "[`date`,get-client] Unable to start server"
        exit ${TEST_FAILED}
    else
        echo "[`date`,get-client] Succesfully started server"
    fi
}

completeInstall()
{
    ## Modify the startup script to run a command to update the route after startup
    sed  -i -e "\$ a script-security 2" \
        -e "\$ a route-up \"/bin/bash ${SCRIPT_DIR}/route-up\"" \
        ${OPENVPN_CONF_DIR}/client.conf
}




copyLocalFile

installClient

testInstall

completeInstall

true
