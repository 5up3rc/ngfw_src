#!/bin/bash

exec >> @UVM_LOG@/openvpn.log 2>&1

currentPid=`pidof openvpn`
expectedPid=`cat /var/run/openvpn.client.pid`

update_client_config()
{
    echo -e "\n[DEBUG:`date`] Updating the openvpn client configuration"
    
    local t_temp
    t_temp=`mktemp`

    ## Update all of the route-up and script-security lines to have the new values.
    awk '/^route-up/ { next } ; /^script-security/ { next } ; { print } ; END { print "script-security 2" ; print "route-up \"/bin/bash @UVM_HOME@/openvpn/route-up\"" }' /etc/openvpn/client.conf > ${t_temp}
    
    mv ${t_temp} /etc/openvpn/client.conf
    chmod 744 /etc/openvpn/client.conf
    chown root:root /etc/openvpn/client.conf
}

if [ -z "${currentPid}" ] || [ "${currentPid}x" != "${expectedPid}x" ]; then
    ## Update the config to the latest version
    ## Parse out any entries of route-up
    echo -e "\n[DEBUG:`date`] OpenVPN is no longer running, attempting a restart"

    update_client_config

    killall openvpn
    /etc/init.d/openvpn restart
fi

echo -n "."

## Test if the UVM is aware of the VPN interface
currentYear=`date +"%y"`
lastError=`tail -n 100 @UVM_LOG@/console.log | grep 'netcap_intf_db.c:[0-9]*:CRITICAL ERROR: Nothing is known about' | awk  -F '.'  '{ print $1 }' | tail -n 1  | sed "s|^\(..\)-\(..\)|\1/\2/${currentYear}|"`

if [ "${lastError}x" != "x" ] && (( `date -d "${lastError}" +%s` > ( `date +%s` - 60 ))) ; then
   echo -e "\n[DEBUG:`date`] Running ucli updateAddress to renew interfaces ${lastError}"
   @USR_BIN@/ucli updateAddress
fi

true

